{"version":3,"sources":["custom/login/login-3.js"],"names":["KTLogin","_buttonSpinnerClasses","init","form","formSubmitButton","KTUtil","getById","attr","FormValidation","formValidation","fields","username","validators","notEmpty","message","password","plugins","trigger","Trigger","submitButton","SubmitButton","bootstrap","Bootstrap","on","btnWait","setTimeout","btnRelease","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","then","scrollTop","email","emailAddress","_handleFormForgot","wizardObj","wizardEl","validations","push","fname","lname","phone","address1","postcode","city","state","country","delivery","packaging","preferreddelivery","ccname","ccnumber","creditCard","ccmonth","ccyear","cccvv","digits","KTWizard","startStep","clickableSteps","wizard","getStep","validate","status","goNext","stop","_handleFormSignup","jQuery","document","ready"],"mappings":"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","file":"login-3.js","sourcesContent":["\"use strict\";\r\n\r\n// Class Definition\r\nvar KTLogin = function() {\r\n\tvar _buttonSpinnerClasses = 'spinner spinner-right spinner-white pr-15';\r\n\r\n\tvar _handleFormSignin = function() {\r\n\t\tvar form = KTUtil.getById('kt_login_singin_form');\r\n\t\tvar formSubmitUrl = KTUtil.attr(form, 'action');\r\n\t\tvar formSubmitButton = KTUtil.getById('kt_login_singin_form_submit_button');\r\n\r\n\t\tif (!form) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tFormValidation\r\n\t\t    .formValidation(\r\n\t\t        form,\r\n\t\t        {\r\n\t\t            fields: {\r\n\t\t\t\t\t\tusername: {\r\n\t\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\t\tmessage: 'Username is required'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tpassword: {\r\n\t\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\t\tmessage: 'Password is required'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t            },\r\n\t\t            plugins: {\r\n\t\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\t\tsubmitButton: new FormValidation.plugins.SubmitButton(),\r\n\t            \t\t//defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation\r\n\t\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap({\r\n\t\t\t\t\t\t//\teleInvalidClass: '', // Repace with uncomment to hide bootstrap validation icons\r\n\t\t\t\t\t\t//\teleValidClass: '',   // Repace with uncomment to hide bootstrap validation icons\r\n\t\t\t\t\t\t})\r\n\t\t            }\r\n\t\t        }\r\n\t\t    )\r\n\t\t    .on('core.form.valid', function() {\r\n\t\t\t\t// Show loading state on button\r\n\t\t\t\tKTUtil.btnWait(formSubmitButton, _buttonSpinnerClasses, \"Please wait\");\r\n\r\n\t\t\t\t// Simulate Ajax request\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tKTUtil.btnRelease(formSubmitButton);\r\n\t\t\t\t}, 2000);\r\n\r\n\t\t\t\t// Form Validation & Ajax Submission: https://formvalidation.io/guide/examples/using-ajax-to-submit-the-form\r\n\t\t\t\t/**\r\n\t\t        FormValidation.utils.fetch(formSubmitUrl, {\r\n\t\t            method: 'POST',\r\n\t\t\t\t\tdataType: 'json',\r\n\t\t            params: {\r\n\t\t                name: form.querySelector('[name=\"username\"]').value,\r\n\t\t                email: form.querySelector('[name=\"password\"]').value,\r\n\t\t            },\r\n\t\t        }).then(function(response) { // Return valid JSON\r\n\t\t\t\t\t// Release button\r\n\t\t\t\t\tKTUtil.btnRelease(formSubmitButton);\r\n\r\n\t\t\t\t\tif (response && typeof response === 'object' && response.status && response.status == 'success') {\r\n\t\t\t\t\t\tSwal.fire({\r\n\t\t\t                text: \"All is cool! Now you submit this form\",\r\n\t\t\t                icon: \"success\",\r\n\t\t\t                buttonsStyling: false,\r\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t            }).then(function() {\r\n\t\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tSwal.fire({\r\n\t\t\t                text: \"Sorry, something went wrong, please try again.\",\r\n\t\t\t                icon: \"error\",\r\n\t\t\t                buttonsStyling: false,\r\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t            }).then(function() {\r\n\t\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t        });\r\n\t\t\t\t**/\r\n\t\t    })\r\n\t\t\t.on('core.form.invalid', function() {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t\t\t\ticon: \"error\",\r\n\t\t\t\t\tbuttonsStyling: false,\r\n\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}).then(function() {\r\n\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t});\r\n\t\t    });\r\n    }\r\n\r\n\tvar _handleFormForgot = function() {\r\n\t\tvar form = KTUtil.getById('kt_login_forgot_form');\r\n\t\tvar formSubmitUrl = KTUtil.attr(form, 'action');\r\n\t\tvar formSubmitButton = KTUtil.getById('kt_login_forgot_form_submit_button');\r\n\r\n\t\tif (!form) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tFormValidation\r\n\t\t    .formValidation(\r\n\t\t        form,\r\n\t\t        {\r\n\t\t            fields: {\r\n\t\t\t\t\t\temail: {\r\n\t\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\t\tmessage: 'Email is required'\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\temailAddress: {\r\n\t\t\t\t\t\t\t\t\tmessage: 'The value is not a valid email address'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t            },\r\n\t\t            plugins: {\r\n\t\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\t\tsubmitButton: new FormValidation.plugins.SubmitButton(),\r\n\t            \t\t//defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation\r\n\t\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap({\r\n\t\t\t\t\t\t//\teleInvalidClass: '', // Repace with uncomment to hide bootstrap validation icons\r\n\t\t\t\t\t\t//\teleValidClass: '',   // Repace with uncomment to hide bootstrap validation icons\r\n\t\t\t\t\t\t})\r\n\t\t            }\r\n\t\t        }\r\n\t\t    )\r\n\t\t    .on('core.form.valid', function() {\r\n\t\t\t\t// Show loading state on button\r\n\t\t\t\tKTUtil.btnWait(formSubmitButton, _buttonSpinnerClasses, \"Please wait\");\r\n\r\n\t\t\t\t// Simulate Ajax request\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tKTUtil.btnRelease(formSubmitButton);\r\n\t\t\t\t}, 2000);\r\n\t\t    })\r\n\t\t\t.on('core.form.invalid', function() {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t\t\t\ticon: \"error\",\r\n\t\t\t\t\tbuttonsStyling: false,\r\n\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}).then(function() {\r\n\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t});\r\n\t\t    });\r\n    }\r\n\r\n\tvar _handleFormSignup = function() {\r\n\t\t// Base elements\r\n\t\tvar wizardEl = KTUtil.getById('kt_login');\r\n\t\tvar form = KTUtil.getById('kt_login_signup_form');\r\n\t\tvar wizardObj;\r\n\t\tvar validations = [];\r\n\r\n\t\tif (!form) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n\t\t// Step 1\r\n\t\tvalidations.push(FormValidation.formValidation(\r\n\t\t\tform,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\tfname: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'First name is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlname: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Last Name is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tphone: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Phone is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\temail: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Email is required'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\temailAddress: {\r\n\t\t\t\t\t\t\t\tmessage: 'The value is not a valid email address'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t));\r\n\r\n\t\t// Step 2\r\n\t\tvalidations.push(FormValidation.formValidation(\r\n\t\t\tform,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\taddress1: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Address is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpostcode: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Postcode is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcity: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'City is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstate: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'State is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcountry: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Country is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t));\r\n\r\n\t\t// Step 3\r\n\t\tvalidations.push(FormValidation.formValidation(\r\n\t\t\tform,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\tdelivery: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Delivery type is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpackaging: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Packaging type is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpreferreddelivery: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Preferred delivery window is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t));\r\n\r\n\t\t// Step 4\r\n\t\tvalidations.push(FormValidation.formValidation(\r\n\t\t\tform,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\tccname: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Credit card name is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tccnumber: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Credit card number is required'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tcreditCard: {\r\n\t\t\t\t\t\t\t\tmessage: 'The credit card number is not valid'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tccmonth: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Credit card month is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tccyear: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Credit card year is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcccvv: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Credit card CVV is required'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tdigits: {\r\n\t\t\t\t\t\t\t\tmessage: 'The CVV value is not valid. Only numbers is allowed'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t));\r\n\r\n\t\t// Initialize form wizard\r\n\t\twizardObj = new KTWizard(wizardEl, {\r\n\t\t\tstartStep: 1, // initial active step number\r\n\t\t\tclickableSteps: false // to make steps clickable this set value true and add data-wizard-clickable=\"true\" in HTML for class=\"wizard\" element\r\n\t\t});\r\n\r\n\t\t// Validation before going to next page\r\n\t\twizardObj.on('beforeNext', function (wizard) {\r\n\t\t\tvalidations[wizard.getStep() - 1].validate().then(function (status) {\r\n\t\t\t\tif (status == 'Valid') {\r\n\t\t\t\t\twizardObj.goNext();\r\n\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t\t\t\t\ticon: \"error\",\r\n\t\t\t\t\t\tbuttonsStyling: false,\r\n\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\twizardObj.stop();  // Don't go to the next step\r\n\t\t});\r\n\r\n\t\t// Change event\r\n\t\twizardObj.on('change', function (wizard) {\r\n\t\t\tKTUtil.scrollTop();\r\n\t\t});\r\n    }\r\n\r\n    // Public Functions\r\n    return {\r\n        init: function() {\r\n            _handleFormSignin();\r\n\t\t\t_handleFormForgot();\r\n\t\t\t_handleFormSignup();\r\n        }\r\n    };\r\n}();\r\n\r\n// Class Initialization\r\njQuery(document).ready(function() {\r\n    KTLogin.init();\r\n});\r\n"]}