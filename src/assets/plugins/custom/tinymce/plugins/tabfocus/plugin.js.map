{"version":3,"sources":["tabfocus/plugin.js"],"names":["global","tinymce","util","Tools","resolve","global$1","global$2","global$3","global$4","global$5","global$6","DOM","tabCancel","e","keyCode","TAB","ctrlKey","altKey","metaKey","preventDefault","add","editor","tabHandler","x","i","isDefaultPrevented","el","find","direction","select","canSelectRecursive","nodeName","type","style","display","visibility","parentNode","canSelect","test","tagName","get","id","tabIndex","each","length","v","explode","getParam","getTabFocusElements","getTabFocus","shiftKey","focusEditor","name","focus","setTimeout","webkit","window","on","inline","setAttrib","getBody","gecko","setup"],"mappings":"CAQC,WACG,aAEA,IAAIA,EAASC,QAAQC,KAAKC,MAAMC,QAAQ,yBAEpCC,EAAWJ,QAAQC,KAAKC,MAAMC,QAAQ,wBAEtCE,EAAWL,QAAQC,KAAKC,MAAMC,QAAQ,yBAEtCG,EAAWN,QAAQC,KAAKC,MAAMC,QAAQ,eAEtCI,EAAWP,QAAQC,KAAKC,MAAMC,QAAQ,sBAEtCK,EAAWR,QAAQC,KAAKC,MAAMC,QAAQ,sBAEtCM,EAAWT,QAAQC,KAAKC,MAAMC,QAAQ,mBAStCO,EAAMN,EAASM,IACfC,EAAY,SAAUC,GACpBA,EAAEC,UAAYJ,EAASK,KAAQF,EAAEG,SAAYH,EAAEI,QAAWJ,EAAEK,SAC9DL,EAAEM,kBAsFJnB,EAAOoB,IAAI,YAAY,SAAUC,IAnFvB,SAAUA,GACpB,IAAIC,EAAa,SAAUT,GACzB,IAAIU,EAAGC,EACP,KAAIX,EAAEC,UAAYJ,EAASK,KAAOF,EAAEG,SAAWH,EAAEI,QAAUJ,EAAEK,SAAWL,EAAEY,sBAA1E,CAGA,IAkCIC,EAlCAC,EAAO,SAAUC,GACnB,IAAIF,EAAKf,EAAIkB,OAAO,0CAChBC,EAAqB,SAAUjB,GACjC,MAAsB,SAAfA,EAAEkB,UAAkC,WAAXlB,EAAEmB,MAAyC,SAApBnB,EAAEoB,MAAMC,SAA6C,WAAvBrB,EAAEoB,MAAME,YAA2BL,EAAmBjB,EAAEuB,aAE3IC,EAAY,SAAUX,GACxB,MAAO,wBAAwBY,KAAKZ,EAAGa,UAAYjC,EAASkC,IAAI3B,EAAE4B,MAAwB,IAAjBf,EAAGgB,UAAmBZ,EAAmBJ,IAQpH,GANAjB,EAASkC,KAAKjB,GAAI,SAAUb,EAAGW,GAC7B,GAAIX,EAAE4B,KAAOpB,EAAOoB,GAElB,OADAlB,EAAIC,GACG,KAGPI,EAAY,GACd,IAAKJ,EAAID,EAAI,EAAGC,EAAIE,EAAGkB,OAAQpB,IAC7B,GAAIa,EAAUX,EAAGF,IACf,OAAOE,EAAGF,QAId,IAAKA,EAAID,EAAI,EAAGC,GAAK,EAAGA,IACtB,GAAIa,EAAUX,EAAGF,IACf,OAAOE,EAAGF,GAIhB,OAAO,MAELqB,EAAIpC,EAASqC,QA7CH,SAAUzB,GAC1B,OAAOA,EAAO0B,SAAS,YAJC,SAAU1B,GAClC,OAAOA,EAAO0B,SAAS,oBAAqB,eAGRC,CAAoB3B,IA4C7B4B,CAAY5B,IAmBrC,GAlBiB,IAAbwB,EAAED,SACJC,EAAE,GAAKA,EAAE,GACTA,EAAE,GAAK,SAKLnB,EAFAb,EAAEqC,SACS,UAATL,EAAE,GACClB,GAAM,GAENhB,EAAI6B,IAAIK,EAAE,IAGJ,UAATA,EAAE,GACClB,EAAK,GAELhB,EAAI6B,IAAIK,EAAE,IAGX,CACN,IAAIM,EAAc7C,EAASkC,IAAId,EAAGe,IAAMf,EAAG0B,MACvC1B,EAAGe,IAAMU,EACXA,EAAYE,QAEZ7C,EAAS8C,YAAW,WACb/C,EAASgD,QACZC,OAAOH,QAET3B,EAAG2B,UACF,IAELxC,EAAEM,oBAGNE,EAAOoC,GAAG,QAAQ,WACZpC,EAAOqC,QACT/C,EAAIgD,UAAUtC,EAAOuC,UAAW,WAAY,MAE9CvC,EAAOoC,GAAG,QAAS7C,GACfL,EAASsD,MACXxC,EAAOoC,GAAG,mBAAoBnC,GAE9BD,EAAOoC,GAAG,UAAWnC,MAOvBwC,CAAMzC,MAlHd","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.8.2 (2021-06-23)\n */\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var getTabFocusElements = function (editor) {\n      return editor.getParam('tabfocus_elements', ':prev,:next');\n    };\n    var getTabFocus = function (editor) {\n      return editor.getParam('tab_focus', getTabFocusElements(editor));\n    };\n\n    var DOM = global$1.DOM;\n    var tabCancel = function (e) {\n      if (e.keyCode === global$6.TAB && !e.ctrlKey && !e.altKey && !e.metaKey) {\n        e.preventDefault();\n      }\n    };\n    var setup = function (editor) {\n      var tabHandler = function (e) {\n        var x, i;\n        if (e.keyCode !== global$6.TAB || e.ctrlKey || e.altKey || e.metaKey || e.isDefaultPrevented()) {\n          return;\n        }\n        var find = function (direction) {\n          var el = DOM.select(':input:enabled,*[tabindex]:not(iframe)');\n          var canSelectRecursive = function (e) {\n            return e.nodeName === 'BODY' || e.type !== 'hidden' && e.style.display !== 'none' && e.style.visibility !== 'hidden' && canSelectRecursive(e.parentNode);\n          };\n          var canSelect = function (el) {\n            return /INPUT|TEXTAREA|BUTTON/.test(el.tagName) && global$2.get(e.id) && el.tabIndex !== -1 && canSelectRecursive(el);\n          };\n          global$5.each(el, function (e, i) {\n            if (e.id === editor.id) {\n              x = i;\n              return false;\n            }\n          });\n          if (direction > 0) {\n            for (i = x + 1; i < el.length; i++) {\n              if (canSelect(el[i])) {\n                return el[i];\n              }\n            }\n          } else {\n            for (i = x - 1; i >= 0; i--) {\n              if (canSelect(el[i])) {\n                return el[i];\n              }\n            }\n          }\n          return null;\n        };\n        var v = global$5.explode(getTabFocus(editor));\n        if (v.length === 1) {\n          v[1] = v[0];\n          v[0] = ':prev';\n        }\n        var el;\n        if (e.shiftKey) {\n          if (v[0] === ':prev') {\n            el = find(-1);\n          } else {\n            el = DOM.get(v[0]);\n          }\n        } else {\n          if (v[1] === ':next') {\n            el = find(1);\n          } else {\n            el = DOM.get(v[1]);\n          }\n        }\n        if (el) {\n          var focusEditor = global$2.get(el.id || el.name);\n          if (el.id && focusEditor) {\n            focusEditor.focus();\n          } else {\n            global$4.setTimeout(function () {\n              if (!global$3.webkit) {\n                window.focus();\n              }\n              el.focus();\n            }, 10);\n          }\n          e.preventDefault();\n        }\n      };\n      editor.on('init', function () {\n        if (editor.inline) {\n          DOM.setAttrib(editor.getBody(), 'tabIndex', null);\n        }\n        editor.on('keyup', tabCancel);\n        if (global$3.gecko) {\n          editor.on('keypress keydown', tabHandler);\n        } else {\n          editor.on('keydown', tabHandler);\n        }\n      });\n    };\n\n    function Plugin () {\n      global.add('tabfocus', function (editor) {\n        setup(editor);\n      });\n    }\n\n    Plugin();\n\n}());\n"]}