{"version":3,"sources":["paste/plugin.js"],"names":["type","eq","call","id","prefix","count","Cell","initial","value","get","set","v","global","tinymce","util","Tools","resolve","isNonNullable","a","isNullable","isFunction","noop","constant","never","always","none","NONE","o","isNone","fold","n","_s","is","isSome","getOr","getOrThunk","thunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","map","each","bind","exists","forall","filter","equals","equals_","toArray","toString","some","constant_a","self","me","f","s","elementEq","b","Optional","from","nativeSlice","Array","prototype","slice","xs","pred","i","len","length","r","x","from$1","subject","clear","isSet","on","checkRange","str","substr","start","global$1","global$2","global$3","global$4","firePastePlainTextToggle","editor","state","fire","global$5","shouldPasteDataImages","getParam","shouldMergeFormats","getRetainStyleProps","getValidate","getAllowHtmlDataUrls","getPasteDataImages","getAllowedImageFileTypes","explode","internalMimeType","internalMark","isMarked","html","indexOf","internalHtmlMime","global$6","toBlockElements","text","rootTag","rootAttrs","blocks","split","tagOpen","key","attrs","tag","hasOwnProperty","push","encodeAllRaw","join","openContainer","tagClose","paragraphs","p","global$7","global$8","nbsp","global$9","global$a","filter$1","content","items","constructor","RegExp","replace","trimHtml","all","s1","s2","isWordContent","test","isNumericList","found","pattern","filterStyles","validStyles","node","styleValue","matches","outputStyles","styles","dom","parseStyle","name","exec","_listLevel","parseInt","firstChild","_listIgnore","remove","wrap","serializeStyle","filterWordContent","retainStyleProperties","makeMap","spaces","Math","floor","validElements","getWordValidElements","schema","valid_elements","valid_children","elements","rule","attributes","class","attributesOrder","style","domParser","addAttributeFilter","nodes","attr","parent","unwrap","className","addNodeFilter","href","rootNode","parse","shouldConvertWordFakeLists","currentListNode","prevListNode","lastLevel","getText","txt","next","trimListStart","regExp","removeIgnoredNodes","convertParagraphToLi","paragraphNode","listName","level","append","lastChild","child","walk","nodeText","convertFakeListsToProperLists","validate","serialize","processResult","cancelled","filterContent","internal","isWordHtml","preProcessArgs","wordContent","firePastePreProcess","filteredContent","parser","fragment","forced_root_block","isRootContent","preProcess$1","hasEventListeners","isDefaultPrevented","tempBody","create","postProcessArgs","firePastePostProcess","innerHTML","postProcessFilter","process","shouldUseDefaultFilters","preProcess","pasteHtml","insertContent","merge","paste","isAbsoluteUrl","url","isImageUrl","toLowerCase","suffix","linkSelection","pasteHtmlFn","selection","isCollapsed","undoManager","extra","execCommand","createLink","insertImage","createImage","pasteAsText","isSmartPasteEnabled","action","smartInsertContent","isNewLineChar","c","normalizeWhitespace","acc","tabSpace","getTabSpaces","normalizedText","isCollapsibleWhitespace","pcIsSpace","idx","isNewline","doPaste","args","pasteHtml$1","internalFlag","unmark","pasteText","encodedText","encode","toBRs","convert","getForcedRootBlock","getForcedRootBlockAttrs","getDataTransferItems","dataTransfer","getData","legacyText","types","contentType","ex","hasContentType","clipboardContent","mimeType","hasHtmlOrText","uniqueId","pasteImage","imageItem","uri","_a","data","decodeURIComponent","base64","file","blob","img","Image","src","imgElm","getImagesDataImgFilter","isValidDataUriImage","blobCache","editorUpload","blobInfo","existingBlobInfo","getByData","useFileName","getImagesReuseFilename","name_1","m","match","extractFilename","filename","add","blobUri","readFilesAsDataUris","item","getAsFile","isDataTransferItem","reader","window","FileReader","onload","result","readAsDataURL","isImage","allowedExtensions","startsWith","extension","lowerExt","mimeOverrides","jpg","jpe","jfi","jif","jfif","pjpeg","pjp","svg","hasOwn","pasteImageData","e","rng","clipboardData","images","files","getImagesFromDataTransfer","preventDefault","then","fileResults","setRng","isKeyboardPasteEvent","metaKeyPressed","keyCode","shiftKey","registerEventHandlers","pasteBin","pasteFormat","keyboardPastePlainTextState","keyboardPasteEvent","keyboardPastePressed","removePasteBinOnKeyUp","webkit","navigator","userAgent","stopImmediatePropagation","ie","ieFake","firePaste","once","off","insertClipboardContent","isKeyBoardPaste","plainTextMode","getHtml","isDefaultContent","isPlainTextHtml","isAbsoluteUrl$1","shortEndedElements","getShortEndedElements","ignoreElements","blockElements","getBlockElements","currentNode","shortEnded","innerText","windowManager","alert","isKeyboardPaste","clipboardEvent","getDoc","getClipboardContent","isBrokenAndroidClipboardEvent","getLastRng","getRng","getEl","stopPropagation","setEditorTimeout","getPasteBinParent","inline","document","body","getBody","delegatePasteEvents","pasteBinElm","pasteBinDefaultContent","isExternalPasteBin","_e","isDefault","elm","PasteBin","lastRng","lastRngCell","contentEditable","gecko","setStyle","getStyle","focus","select","pasteBinClone","unbind","copyAndRemove","toElm","fromElm","appendChild","pasteBinClones","grep","childNodes","shift","dirtyWrappers","cleanWrapper","insertBefore","Clipboard","transparentSrc","isWebKitFakeUrl","isDataUri","isPasteInsert","registerEventsAndFilters","register","clipboard","addCommand","togglePlainTextPaste","ui","setHtml5Clipboard","iOS","setData","hasWorkingClipboardApi","clearData","setClipboardData","evt","fallback","done","markedHtml","mark","outer","contenteditable","inner","setStyles","position","top","left","width","overflow","range","offscreenRange","createRng","selectNodeContents","setTimeout","parentNode","removeChild","getContent","contextual","format","hasSelectedContent","getParent","getStart","isTableSelection","register$1","browser","isChrome","isFirefox","rng_1","cut","copy","global$b","getCaretRangeFromEvent","getCaretRangeFromPoint","clientX","clientY","setFocusedRange","addPreProcessFilter","filterFunc","removeExplorerBrElementsAfterBlocks","block","blockName","explorerBlocksRegExp","removeWebKitStyles","webKitStyles","webKitStylesSetting","getWebkitStyles","shouldRemoveWebKitStyles","dom_1","node_1","getNode","before","after","inputStyles","decode","inputValue","currentValue","toHex","removeUnderlineAndFontInAnchor","root","$","find","makeSetupHandler","api","setActive","pastePlainTextToggleHandler","hasPlugin","console","log","hasProPlugin","draggingInternallyState","isPasteAsTextEnabled","quirks","addPostProcessFilter","setup$2","registry","addToggleButton","active","icon","tooltip","onAction","onSetup","addToggleMenuItem","register$2","plugin","plugins","getPreProcess","postProcess","getPostProcess","setup$1","shouldBlockDrop","plainTextContent","dropContent","shouldFilterDrop","content_1","transact","setup"],"mappings":"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","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.8.2 (2021-06-23)\n */\n(function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      return {\n        get: get,\n        set: set\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var hasProPlugin = function (editor) {\n      if (editor.hasPlugin('powerpaste', true)) {\n        if (typeof window.console !== 'undefined' && window.console.log) {\n          window.console.log('PowerPaste is incompatible with Paste plugin! Remove \\'paste\\' from the \\'plugins\\' option.');\n        }\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    var get = function (clipboard, quirks) {\n      return {\n        clipboard: clipboard,\n        quirks: quirks\n      };\n    };\n\n    var isSimpleType = function (type) {\n      return function (value) {\n        return typeof value === type;\n      };\n    };\n    var isNullable = function (a) {\n      return a === null || a === undefined;\n    };\n    var isNonNullable = function (a) {\n      return !isNullable(a);\n    };\n    var isFunction = isSimpleType('function');\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, _s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Optional = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var nativeSlice = Array.prototype.slice;\n    var exists = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var filter = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var value = function () {\n      var subject = Cell(Optional.none());\n      var clear = function () {\n        return subject.set(Optional.none());\n      };\n      var set = function (s) {\n        return subject.set(Optional.some(s));\n      };\n      var isSet = function () {\n        return subject.get().isSome();\n      };\n      var on = function (f) {\n        return subject.get().each(f);\n      };\n      return {\n        clear: clear,\n        set: set,\n        isSet: isSet,\n        on: on\n      };\n    };\n\n    var checkRange = function (str, substr, start) {\n      return substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    };\n    var startsWith = function (str, prefix) {\n      return checkRange(str, prefix, 0);\n    };\n    var endsWith = function (str, suffix) {\n      return checkRange(str, suffix, str.length - suffix.length);\n    };\n    var repeat = function (s, count) {\n      return count <= 0 ? '' : new Array(count + 1).join(s);\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.Promise');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var firePastePreProcess = function (editor, html, internal, isWordHtml) {\n      return editor.fire('PastePreProcess', {\n        content: html,\n        internal: internal,\n        wordContent: isWordHtml\n      });\n    };\n    var firePastePostProcess = function (editor, node, internal, isWordHtml) {\n      return editor.fire('PastePostProcess', {\n        node: node,\n        internal: internal,\n        wordContent: isWordHtml\n      });\n    };\n    var firePastePlainTextToggle = function (editor, state) {\n      return editor.fire('PastePlainTextToggle', { state: state });\n    };\n    var firePaste = function (editor, ieFake) {\n      return editor.fire('paste', { ieFake: ieFake });\n    };\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var shouldBlockDrop = function (editor) {\n      return editor.getParam('paste_block_drop', false);\n    };\n    var shouldPasteDataImages = function (editor) {\n      return editor.getParam('paste_data_images', false);\n    };\n    var shouldFilterDrop = function (editor) {\n      return editor.getParam('paste_filter_drop', true);\n    };\n    var getPreProcess = function (editor) {\n      return editor.getParam('paste_preprocess');\n    };\n    var getPostProcess = function (editor) {\n      return editor.getParam('paste_postprocess');\n    };\n    var getWebkitStyles = function (editor) {\n      return editor.getParam('paste_webkit_styles');\n    };\n    var shouldRemoveWebKitStyles = function (editor) {\n      return editor.getParam('paste_remove_styles_if_webkit', true);\n    };\n    var shouldMergeFormats = function (editor) {\n      return editor.getParam('paste_merge_formats', true);\n    };\n    var isSmartPasteEnabled = function (editor) {\n      return editor.getParam('smart_paste', true);\n    };\n    var isPasteAsTextEnabled = function (editor) {\n      return editor.getParam('paste_as_text', false);\n    };\n    var getRetainStyleProps = function (editor) {\n      return editor.getParam('paste_retain_style_properties');\n    };\n    var getWordValidElements = function (editor) {\n      var defaultValidElements = '-strong/b,-em/i,-u,-span,-p,-ol,-ul,-li,-h1,-h2,-h3,-h4,-h5,-h6,' + '-p/div,-a[href|name],sub,sup,strike,br,del,table[width],tr,' + 'td[colspan|rowspan|width],th[colspan|rowspan|width],thead,tfoot,tbody';\n      return editor.getParam('paste_word_valid_elements', defaultValidElements);\n    };\n    var shouldConvertWordFakeLists = function (editor) {\n      return editor.getParam('paste_convert_word_fake_lists', true);\n    };\n    var shouldUseDefaultFilters = function (editor) {\n      return editor.getParam('paste_enable_default_filters', true);\n    };\n    var getValidate = function (editor) {\n      return editor.getParam('validate');\n    };\n    var getAllowHtmlDataUrls = function (editor) {\n      return editor.getParam('allow_html_data_urls', false, 'boolean');\n    };\n    var getPasteDataImages = function (editor) {\n      return editor.getParam('paste_data_images', false, 'boolean');\n    };\n    var getImagesDataImgFilter = function (editor) {\n      return editor.getParam('images_dataimg_filter');\n    };\n    var getImagesReuseFilename = function (editor) {\n      return editor.getParam('images_reuse_filename');\n    };\n    var getForcedRootBlock = function (editor) {\n      return editor.getParam('forced_root_block');\n    };\n    var getForcedRootBlockAttrs = function (editor) {\n      return editor.getParam('forced_root_block_attrs');\n    };\n    var getTabSpaces = function (editor) {\n      return editor.getParam('paste_tab_spaces', 4, 'number');\n    };\n    var getAllowedImageFileTypes = function (editor) {\n      var defaultImageFileTypes = 'jpeg,jpg,jpe,jfi,jif,jfif,png,gif,bmp,webp';\n      return global$5.explode(editor.getParam('images_file_types', defaultImageFileTypes, 'string'));\n    };\n\n    var internalMimeType = 'x-tinymce/html';\n    var internalMark = '<!-- ' + internalMimeType + ' -->';\n    var mark = function (html) {\n      return internalMark + html;\n    };\n    var unmark = function (html) {\n      return html.replace(internalMark, '');\n    };\n    var isMarked = function (html) {\n      return html.indexOf(internalMark) !== -1;\n    };\n    var internalHtmlMime = function () {\n      return internalMimeType;\n    };\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.html.Entities');\n\n    var isPlainText = function (text) {\n      return !/<(?:\\/?(?!(?:div|p|br|span)>)\\w+|(?:(?!(?:span style=\"white-space:\\s?pre;?\">)|br\\s?\\/>))\\w+\\s[^>]+)>/i.test(text);\n    };\n    var toBRs = function (text) {\n      return text.replace(/\\r?\\n/g, '<br>');\n    };\n    var openContainer = function (rootTag, rootAttrs) {\n      var key;\n      var attrs = [];\n      var tag = '<' + rootTag;\n      if (typeof rootAttrs === 'object') {\n        for (key in rootAttrs) {\n          if (rootAttrs.hasOwnProperty(key)) {\n            attrs.push(key + '=\"' + global$6.encodeAllRaw(rootAttrs[key]) + '\"');\n          }\n        }\n        if (attrs.length) {\n          tag += ' ' + attrs.join(' ');\n        }\n      }\n      return tag + '>';\n    };\n    var toBlockElements = function (text, rootTag, rootAttrs) {\n      var blocks = text.split(/\\n\\n/);\n      var tagOpen = openContainer(rootTag, rootAttrs);\n      var tagClose = '</' + rootTag + '>';\n      var paragraphs = global$5.map(blocks, function (p) {\n        return p.split(/\\n/).join('<br />');\n      });\n      var stitch = function (p) {\n        return tagOpen + p + tagClose;\n      };\n      return paragraphs.length === 1 ? paragraphs[0] : global$5.map(paragraphs, stitch).join('');\n    };\n    var convert = function (text, rootTag, rootAttrs) {\n      return rootTag ? toBlockElements(text, rootTag === true ? 'p' : rootTag, rootAttrs) : toBRs(text);\n    };\n\n    var global$7 = tinymce.util.Tools.resolve('tinymce.html.DomParser');\n\n    var global$8 = tinymce.util.Tools.resolve('tinymce.html.Serializer');\n\n    var nbsp = '\\xA0';\n\n    var global$9 = tinymce.util.Tools.resolve('tinymce.html.Node');\n\n    var global$a = tinymce.util.Tools.resolve('tinymce.html.Schema');\n\n    var filter$1 = function (content, items) {\n      global$5.each(items, function (v) {\n        if (v.constructor === RegExp) {\n          content = content.replace(v, '');\n        } else {\n          content = content.replace(v[0], v[1]);\n        }\n      });\n      return content;\n    };\n    var innerText = function (html) {\n      var schema = global$a();\n      var domParser = global$7({}, schema);\n      var text = '';\n      var shortEndedElements = schema.getShortEndedElements();\n      var ignoreElements = global$5.makeMap('script noscript style textarea video audio iframe object', ' ');\n      var blockElements = schema.getBlockElements();\n      var walk = function (node) {\n        var name = node.name, currentNode = node;\n        if (name === 'br') {\n          text += '\\n';\n          return;\n        }\n        if (name === 'wbr') {\n          return;\n        }\n        if (shortEndedElements[name]) {\n          text += ' ';\n        }\n        if (ignoreElements[name]) {\n          text += ' ';\n          return;\n        }\n        if (node.type === 3) {\n          text += node.value;\n        }\n        if (!node.shortEnded) {\n          if (node = node.firstChild) {\n            do {\n              walk(node);\n            } while (node = node.next);\n          }\n        }\n        if (blockElements[name] && currentNode.next) {\n          text += '\\n';\n          if (name === 'p') {\n            text += '\\n';\n          }\n        }\n      };\n      html = filter$1(html, [/<!\\[[^\\]]+\\]>/g]);\n      walk(domParser.parse(html));\n      return text;\n    };\n    var trimHtml = function (html) {\n      var trimSpaces = function (all, s1, s2) {\n        if (!s1 && !s2) {\n          return ' ';\n        }\n        return nbsp;\n      };\n      html = filter$1(html, [\n        /^[\\s\\S]*<body[^>]*>\\s*|\\s*<\\/body[^>]*>[\\s\\S]*$/ig,\n        /<!--StartFragment-->|<!--EndFragment-->/g,\n        [\n          /( ?)<span class=\"Apple-converted-space\">\\u00a0<\\/span>( ?)/g,\n          trimSpaces\n        ],\n        /<br class=\"Apple-interchange-newline\">/g,\n        /<br>$/i\n      ]);\n      return html;\n    };\n    var createIdGenerator = function (prefix) {\n      var count = 0;\n      return function () {\n        return prefix + count++;\n      };\n    };\n    var getImageMimeType = function (ext) {\n      var lowerExt = ext.toLowerCase();\n      var mimeOverrides = {\n        jpg: 'jpeg',\n        jpe: 'jpeg',\n        jfi: 'jpeg',\n        jif: 'jpeg',\n        jfif: 'jpeg',\n        pjpeg: 'jpeg',\n        pjp: 'jpeg',\n        svg: 'svg+xml'\n      };\n      return global$5.hasOwn(mimeOverrides, lowerExt) ? 'image/' + mimeOverrides[lowerExt] : 'image/' + lowerExt;\n    };\n\n    var isWordContent = function (content) {\n      return /<font face=\"Times New Roman\"|class=\"?Mso|style=\"[^\"]*\\bmso-|style='[^']*\\bmso-|w:WordDocument/i.test(content) || /class=\"OutlineElement/.test(content) || /id=\"?docs\\-internal\\-guid\\-/.test(content);\n    };\n    var isNumericList = function (text) {\n      var found;\n      var patterns = [\n        /^[IVXLMCD]+\\.[ \\u00a0]/,\n        /^[ivxlmcd]+\\.[ \\u00a0]/,\n        /^[a-z]{1,2}[\\.\\)][ \\u00a0]/,\n        /^[A-Z]{1,2}[\\.\\)][ \\u00a0]/,\n        /^[0-9]+\\.[ \\u00a0]/,\n        /^[\\u3007\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d]+\\.[ \\u00a0]/,\n        /^[\\u58f1\\u5f10\\u53c2\\u56db\\u4f0d\\u516d\\u4e03\\u516b\\u4e5d\\u62fe]+\\.[ \\u00a0]/\n      ];\n      text = text.replace(/^[\\u00a0 ]+/, '');\n      global$5.each(patterns, function (pattern) {\n        if (pattern.test(text)) {\n          found = true;\n          return false;\n        }\n      });\n      return found;\n    };\n    var isBulletList = function (text) {\n      return /^[\\s\\u00a0]*[\\u2022\\u00b7\\u00a7\\u25CF]\\s*/.test(text);\n    };\n    var convertFakeListsToProperLists = function (node) {\n      var currentListNode, prevListNode, lastLevel = 1;\n      var getText = function (node) {\n        var txt = '';\n        if (node.type === 3) {\n          return node.value;\n        }\n        if (node = node.firstChild) {\n          do {\n            txt += getText(node);\n          } while (node = node.next);\n        }\n        return txt;\n      };\n      var trimListStart = function (node, regExp) {\n        if (node.type === 3) {\n          if (regExp.test(node.value)) {\n            node.value = node.value.replace(regExp, '');\n            return false;\n          }\n        }\n        if (node = node.firstChild) {\n          do {\n            if (!trimListStart(node, regExp)) {\n              return false;\n            }\n          } while (node = node.next);\n        }\n        return true;\n      };\n      var removeIgnoredNodes = function (node) {\n        if (node._listIgnore) {\n          node.remove();\n          return;\n        }\n        if (node = node.firstChild) {\n          do {\n            removeIgnoredNodes(node);\n          } while (node = node.next);\n        }\n      };\n      var convertParagraphToLi = function (paragraphNode, listName, start) {\n        var level = paragraphNode._listLevel || lastLevel;\n        if (level !== lastLevel) {\n          if (level < lastLevel) {\n            if (currentListNode) {\n              currentListNode = currentListNode.parent.parent;\n            }\n          } else {\n            prevListNode = currentListNode;\n            currentListNode = null;\n          }\n        }\n        if (!currentListNode || currentListNode.name !== listName) {\n          prevListNode = prevListNode || currentListNode;\n          currentListNode = new global$9(listName, 1);\n          if (start > 1) {\n            currentListNode.attr('start', '' + start);\n          }\n          paragraphNode.wrap(currentListNode);\n        } else {\n          currentListNode.append(paragraphNode);\n        }\n        paragraphNode.name = 'li';\n        if (level > lastLevel && prevListNode) {\n          prevListNode.lastChild.append(currentListNode);\n        }\n        lastLevel = level;\n        removeIgnoredNodes(paragraphNode);\n        trimListStart(paragraphNode, /^\\u00a0+/);\n        trimListStart(paragraphNode, /^\\s*([\\u2022\\u00b7\\u00a7\\u25CF]|\\w+\\.)/);\n        trimListStart(paragraphNode, /^\\u00a0+/);\n      };\n      var elements = [];\n      var child = node.firstChild;\n      while (typeof child !== 'undefined' && child !== null) {\n        elements.push(child);\n        child = child.walk();\n        if (child !== null) {\n          while (typeof child !== 'undefined' && child.parent !== node) {\n            child = child.walk();\n          }\n        }\n      }\n      for (var i = 0; i < elements.length; i++) {\n        node = elements[i];\n        if (node.name === 'p' && node.firstChild) {\n          var nodeText = getText(node);\n          if (isBulletList(nodeText)) {\n            convertParagraphToLi(node, 'ul');\n            continue;\n          }\n          if (isNumericList(nodeText)) {\n            var matches = /([0-9]+)\\./.exec(nodeText);\n            var start = 1;\n            if (matches) {\n              start = parseInt(matches[1], 10);\n            }\n            convertParagraphToLi(node, 'ol', start);\n            continue;\n          }\n          if (node._listLevel) {\n            convertParagraphToLi(node, 'ul', 1);\n            continue;\n          }\n          currentListNode = null;\n        } else {\n          prevListNode = currentListNode;\n          currentListNode = null;\n        }\n      }\n    };\n    var filterStyles = function (editor, validStyles, node, styleValue) {\n      var outputStyles = {}, matches;\n      var styles = editor.dom.parseStyle(styleValue);\n      global$5.each(styles, function (value, name) {\n        switch (name) {\n        case 'mso-list':\n          matches = /\\w+ \\w+([0-9]+)/i.exec(styleValue);\n          if (matches) {\n            node._listLevel = parseInt(matches[1], 10);\n          }\n          if (/Ignore/i.test(value) && node.firstChild) {\n            node._listIgnore = true;\n            node.firstChild._listIgnore = true;\n          }\n          break;\n        case 'horiz-align':\n          name = 'text-align';\n          break;\n        case 'vert-align':\n          name = 'vertical-align';\n          break;\n        case 'font-color':\n        case 'mso-foreground':\n          name = 'color';\n          break;\n        case 'mso-background':\n        case 'mso-highlight':\n          name = 'background';\n          break;\n        case 'font-weight':\n        case 'font-style':\n          if (value !== 'normal') {\n            outputStyles[name] = value;\n          }\n          return;\n        case 'mso-element':\n          if (/^(comment|comment-list)$/i.test(value)) {\n            node.remove();\n            return;\n          }\n          break;\n        }\n        if (name.indexOf('mso-comment') === 0) {\n          node.remove();\n          return;\n        }\n        if (name.indexOf('mso-') === 0) {\n          return;\n        }\n        if (getRetainStyleProps(editor) === 'all' || validStyles && validStyles[name]) {\n          outputStyles[name] = value;\n        }\n      });\n      if (/(bold)/i.test(outputStyles['font-weight'])) {\n        delete outputStyles['font-weight'];\n        node.wrap(new global$9('b', 1));\n      }\n      if (/(italic)/i.test(outputStyles['font-style'])) {\n        delete outputStyles['font-style'];\n        node.wrap(new global$9('i', 1));\n      }\n      outputStyles = editor.dom.serializeStyle(outputStyles, node.name);\n      if (outputStyles) {\n        return outputStyles;\n      }\n      return null;\n    };\n    var filterWordContent = function (editor, content) {\n      var validStyles;\n      var retainStyleProperties = getRetainStyleProps(editor);\n      if (retainStyleProperties) {\n        validStyles = global$5.makeMap(retainStyleProperties.split(/[, ]/));\n      }\n      content = filter$1(content, [\n        /<br class=\"?Apple-interchange-newline\"?>/gi,\n        /<b[^>]+id=\"?docs-internal-[^>]*>/gi,\n        /<!--[\\s\\S]+?-->/gi,\n        /<(!|script[^>]*>.*?<\\/script(?=[>\\s])|\\/?(\\?xml(:\\w+)?|img|meta|link|style|\\w:\\w+)(?=[\\s\\/>]))[^>]*>/gi,\n        [\n          /<(\\/?)s>/gi,\n          '<$1strike>'\n        ],\n        [\n          /&nbsp;/gi,\n          nbsp\n        ],\n        [\n          /<span\\s+style\\s*=\\s*\"\\s*mso-spacerun\\s*:\\s*yes\\s*;?\\s*\"\\s*>([\\s\\u00a0]*)<\\/span>/gi,\n          function (str, spaces) {\n            return spaces.length > 0 ? spaces.replace(/./, ' ').slice(Math.floor(spaces.length / 2)).split('').join(nbsp) : '';\n          }\n        ]\n      ]);\n      var validElements = getWordValidElements(editor);\n      var schema = global$a({\n        valid_elements: validElements,\n        valid_children: '-li[p]'\n      });\n      global$5.each(schema.elements, function (rule) {\n        if (!rule.attributes.class) {\n          rule.attributes.class = {};\n          rule.attributesOrder.push('class');\n        }\n        if (!rule.attributes.style) {\n          rule.attributes.style = {};\n          rule.attributesOrder.push('style');\n        }\n      });\n      var domParser = global$7({}, schema);\n      domParser.addAttributeFilter('style', function (nodes) {\n        var i = nodes.length, node;\n        while (i--) {\n          node = nodes[i];\n          node.attr('style', filterStyles(editor, validStyles, node, node.attr('style')));\n          if (node.name === 'span' && node.parent && !node.attributes.length) {\n            node.unwrap();\n          }\n        }\n      });\n      domParser.addAttributeFilter('class', function (nodes) {\n        var i = nodes.length, node, className;\n        while (i--) {\n          node = nodes[i];\n          className = node.attr('class');\n          if (/^(MsoCommentReference|MsoCommentText|msoDel)$/i.test(className)) {\n            node.remove();\n          }\n          node.attr('class', null);\n        }\n      });\n      domParser.addNodeFilter('del', function (nodes) {\n        var i = nodes.length;\n        while (i--) {\n          nodes[i].remove();\n        }\n      });\n      domParser.addNodeFilter('a', function (nodes) {\n        var i = nodes.length, node, href, name;\n        while (i--) {\n          node = nodes[i];\n          href = node.attr('href');\n          name = node.attr('name');\n          if (href && href.indexOf('#_msocom_') !== -1) {\n            node.remove();\n            continue;\n          }\n          if (href && href.indexOf('file://') === 0) {\n            href = href.split('#')[1];\n            if (href) {\n              href = '#' + href;\n            }\n          }\n          if (!href && !name) {\n            node.unwrap();\n          } else {\n            if (name && !/^_?(?:toc|edn|ftn)/i.test(name)) {\n              node.unwrap();\n              continue;\n            }\n            node.attr({\n              href: href,\n              name: name\n            });\n          }\n        }\n      });\n      var rootNode = domParser.parse(content);\n      if (shouldConvertWordFakeLists(editor)) {\n        convertFakeListsToProperLists(rootNode);\n      }\n      content = global$8({ validate: getValidate(editor) }, schema).serialize(rootNode);\n      return content;\n    };\n    var preProcess = function (editor, content) {\n      return shouldUseDefaultFilters(editor) ? filterWordContent(editor, content) : content;\n    };\n\n    var preProcess$1 = function (editor, html) {\n      var parser = global$7({}, editor.schema);\n      parser.addNodeFilter('meta', function (nodes) {\n        global$5.each(nodes, function (node) {\n          node.remove();\n        });\n      });\n      var fragment = parser.parse(html, {\n        forced_root_block: false,\n        isRootContent: true\n      });\n      return global$8({ validate: getValidate(editor) }, editor.schema).serialize(fragment);\n    };\n    var processResult = function (content, cancelled) {\n      return {\n        content: content,\n        cancelled: cancelled\n      };\n    };\n    var postProcessFilter = function (editor, html, internal, isWordHtml) {\n      var tempBody = editor.dom.create('div', { style: 'display:none' }, html);\n      var postProcessArgs = firePastePostProcess(editor, tempBody, internal, isWordHtml);\n      return processResult(postProcessArgs.node.innerHTML, postProcessArgs.isDefaultPrevented());\n    };\n    var filterContent = function (editor, content, internal, isWordHtml) {\n      var preProcessArgs = firePastePreProcess(editor, content, internal, isWordHtml);\n      var filteredContent = preProcess$1(editor, preProcessArgs.content);\n      if (editor.hasEventListeners('PastePostProcess') && !preProcessArgs.isDefaultPrevented()) {\n        return postProcessFilter(editor, filteredContent, internal, isWordHtml);\n      } else {\n        return processResult(filteredContent, preProcessArgs.isDefaultPrevented());\n      }\n    };\n    var process = function (editor, html, internal) {\n      var isWordHtml = isWordContent(html);\n      var content = isWordHtml ? preProcess(editor, html) : html;\n      return filterContent(editor, content, internal, isWordHtml);\n    };\n\n    var pasteHtml = function (editor, html) {\n      editor.insertContent(html, {\n        merge: shouldMergeFormats(editor),\n        paste: true\n      });\n      return true;\n    };\n    var isAbsoluteUrl = function (url) {\n      return /^https?:\\/\\/[\\w\\?\\-\\/+=.&%@~#]+$/i.test(url);\n    };\n    var isImageUrl = function (editor, url) {\n      return isAbsoluteUrl(url) && exists(getAllowedImageFileTypes(editor), function (type) {\n        return endsWith(url.toLowerCase(), '.' + type.toLowerCase());\n      });\n    };\n    var createImage = function (editor, url, pasteHtmlFn) {\n      editor.undoManager.extra(function () {\n        pasteHtmlFn(editor, url);\n      }, function () {\n        editor.insertContent('<img src=\"' + url + '\">');\n      });\n      return true;\n    };\n    var createLink = function (editor, url, pasteHtmlFn) {\n      editor.undoManager.extra(function () {\n        pasteHtmlFn(editor, url);\n      }, function () {\n        editor.execCommand('mceInsertLink', false, url);\n      });\n      return true;\n    };\n    var linkSelection = function (editor, html, pasteHtmlFn) {\n      return editor.selection.isCollapsed() === false && isAbsoluteUrl(html) ? createLink(editor, html, pasteHtmlFn) : false;\n    };\n    var insertImage = function (editor, html, pasteHtmlFn) {\n      return isImageUrl(editor, html) ? createImage(editor, html, pasteHtmlFn) : false;\n    };\n    var smartInsertContent = function (editor, html) {\n      global$5.each([\n        linkSelection,\n        insertImage,\n        pasteHtml\n      ], function (action) {\n        return action(editor, html, pasteHtml) !== true;\n      });\n    };\n    var insertContent = function (editor, html, pasteAsText) {\n      if (pasteAsText || isSmartPasteEnabled(editor) === false) {\n        pasteHtml(editor, html);\n      } else {\n        smartInsertContent(editor, html);\n      }\n    };\n\n    var isCollapsibleWhitespace = function (c) {\n      return ' \\f\\t\\x0B'.indexOf(c) !== -1;\n    };\n    var isNewLineChar = function (c) {\n      return c === '\\n' || c === '\\r';\n    };\n    var isNewline = function (text, idx) {\n      return idx < text.length && idx >= 0 ? isNewLineChar(text[idx]) : false;\n    };\n    var normalizeWhitespace = function (editor, text) {\n      var tabSpace = repeat(' ', getTabSpaces(editor));\n      var normalizedText = text.replace(/\\t/g, tabSpace);\n      var result = foldl(normalizedText, function (acc, c) {\n        if (isCollapsibleWhitespace(c) || c === nbsp) {\n          if (acc.pcIsSpace || acc.str === '' || acc.str.length === normalizedText.length - 1 || isNewline(normalizedText, acc.str.length + 1)) {\n            return {\n              pcIsSpace: false,\n              str: acc.str + nbsp\n            };\n          } else {\n            return {\n              pcIsSpace: true,\n              str: acc.str + ' '\n            };\n          }\n        } else {\n          return {\n            pcIsSpace: isNewLineChar(c),\n            str: acc.str + c\n          };\n        }\n      }, {\n        pcIsSpace: false,\n        str: ''\n      });\n      return result.str;\n    };\n\n    var doPaste = function (editor, content, internal, pasteAsText) {\n      var args = process(editor, content, internal);\n      if (args.cancelled === false) {\n        insertContent(editor, args.content, pasteAsText);\n      }\n    };\n    var pasteHtml$1 = function (editor, html, internalFlag) {\n      var internal = internalFlag ? internalFlag : isMarked(html);\n      doPaste(editor, unmark(html), internal, false);\n    };\n    var pasteText = function (editor, text) {\n      var encodedText = editor.dom.encode(text).replace(/\\r\\n/g, '\\n');\n      var normalizedText = normalizeWhitespace(editor, encodedText);\n      var html = convert(normalizedText, getForcedRootBlock(editor), getForcedRootBlockAttrs(editor));\n      doPaste(editor, html, false, true);\n    };\n    var getDataTransferItems = function (dataTransfer) {\n      var items = {};\n      var mceInternalUrlPrefix = 'data:text/mce-internal,';\n      if (dataTransfer) {\n        if (dataTransfer.getData) {\n          var legacyText = dataTransfer.getData('Text');\n          if (legacyText && legacyText.length > 0) {\n            if (legacyText.indexOf(mceInternalUrlPrefix) === -1) {\n              items['text/plain'] = legacyText;\n            }\n          }\n        }\n        if (dataTransfer.types) {\n          for (var i = 0; i < dataTransfer.types.length; i++) {\n            var contentType = dataTransfer.types[i];\n            try {\n              items[contentType] = dataTransfer.getData(contentType);\n            } catch (ex) {\n              items[contentType] = '';\n            }\n          }\n        }\n      }\n      return items;\n    };\n    var getClipboardContent = function (editor, clipboardEvent) {\n      return getDataTransferItems(clipboardEvent.clipboardData || editor.getDoc().dataTransfer);\n    };\n    var hasContentType = function (clipboardContent, mimeType) {\n      return mimeType in clipboardContent && clipboardContent[mimeType].length > 0;\n    };\n    var hasHtmlOrText = function (content) {\n      return hasContentType(content, 'text/html') || hasContentType(content, 'text/plain');\n    };\n    var parseDataUri = function (uri) {\n      var matches = /data:([^;]+);base64,([a-z0-9\\+\\/=]+)/i.exec(uri);\n      if (matches) {\n        return {\n          type: matches[1],\n          data: decodeURIComponent(matches[2])\n        };\n      } else {\n        return {\n          type: null,\n          data: null\n        };\n      }\n    };\n    var isValidDataUriImage = function (editor, imgElm) {\n      var filter = getImagesDataImgFilter(editor);\n      return filter ? filter(imgElm) : true;\n    };\n    var extractFilename = function (editor, str) {\n      var m = str.match(/([\\s\\S]+?)(?:\\.[a-z0-9.]+)$/i);\n      return isNonNullable(m) ? editor.dom.encode(m[1]) : null;\n    };\n    var uniqueId = createIdGenerator('mceclip');\n    var pasteImage = function (editor, imageItem) {\n      var _a = parseDataUri(imageItem.uri), base64 = _a.data, type = _a.type;\n      var id = uniqueId();\n      var file = imageItem.blob;\n      var img = new Image();\n      img.src = imageItem.uri;\n      if (isValidDataUriImage(editor, img)) {\n        var blobCache = editor.editorUpload.blobCache;\n        var blobInfo = void 0;\n        var existingBlobInfo = blobCache.getByData(base64, type);\n        if (!existingBlobInfo) {\n          var useFileName = getImagesReuseFilename(editor) && isNonNullable(file.name);\n          var name_1 = useFileName ? extractFilename(editor, file.name) : id;\n          var filename = useFileName ? file.name : undefined;\n          blobInfo = blobCache.create(id, file, base64, name_1, filename);\n          blobCache.add(blobInfo);\n        } else {\n          blobInfo = existingBlobInfo;\n        }\n        pasteHtml$1(editor, '<img src=\"' + blobInfo.blobUri() + '\">', false);\n      } else {\n        pasteHtml$1(editor, '<img src=\"' + imageItem.uri + '\">', false);\n      }\n    };\n    var isClipboardEvent = function (event) {\n      return event.type === 'paste';\n    };\n    var isDataTransferItem = function (item) {\n      return isNonNullable(item.getAsFile);\n    };\n    var readFilesAsDataUris = function (items) {\n      return global$3.all(map(items, function (item) {\n        return new global$3(function (resolve) {\n          var blob = isDataTransferItem(item) ? item.getAsFile() : item;\n          var reader = new window.FileReader();\n          reader.onload = function () {\n            resolve({\n              blob: blob,\n              uri: reader.result\n            });\n          };\n          reader.readAsDataURL(blob);\n        });\n      }));\n    };\n    var isImage = function (editor) {\n      var allowedExtensions = getAllowedImageFileTypes(editor);\n      return function (file) {\n        return startsWith(file.type, 'image/') && exists(allowedExtensions, function (extension) {\n          return getImageMimeType(extension) === file.type;\n        });\n      };\n    };\n    var getImagesFromDataTransfer = function (editor, dataTransfer) {\n      var items = dataTransfer.items ? map(from$1(dataTransfer.items), function (item) {\n        return item.getAsFile();\n      }) : [];\n      var files = dataTransfer.files ? from$1(dataTransfer.files) : [];\n      return filter(items.length > 0 ? items : files, isImage(editor));\n    };\n    var pasteImageData = function (editor, e, rng) {\n      var dataTransfer = isClipboardEvent(e) ? e.clipboardData : e.dataTransfer;\n      if (getPasteDataImages(editor) && dataTransfer) {\n        var images = getImagesFromDataTransfer(editor, dataTransfer);\n        if (images.length > 0) {\n          e.preventDefault();\n          readFilesAsDataUris(images).then(function (fileResults) {\n            if (rng) {\n              editor.selection.setRng(rng);\n            }\n            each(fileResults, function (result) {\n              pasteImage(editor, result);\n            });\n          });\n          return true;\n        }\n      }\n      return false;\n    };\n    var isBrokenAndroidClipboardEvent = function (e) {\n      var clipboardData = e.clipboardData;\n      return navigator.userAgent.indexOf('Android') !== -1 && clipboardData && clipboardData.items && clipboardData.items.length === 0;\n    };\n    var isKeyboardPasteEvent = function (e) {\n      return global$4.metaKeyPressed(e) && e.keyCode === 86 || e.shiftKey && e.keyCode === 45;\n    };\n    var registerEventHandlers = function (editor, pasteBin, pasteFormat) {\n      var keyboardPasteEvent = value();\n      var keyboardPastePressed = value();\n      var keyboardPastePlainTextState;\n      editor.on('keyup', keyboardPastePressed.clear);\n      editor.on('keydown', function (e) {\n        var removePasteBinOnKeyUp = function (e) {\n          if (isKeyboardPasteEvent(e) && !e.isDefaultPrevented()) {\n            pasteBin.remove();\n          }\n        };\n        if (isKeyboardPasteEvent(e) && !e.isDefaultPrevented()) {\n          keyboardPastePlainTextState = e.shiftKey && e.keyCode === 86;\n          if (keyboardPastePlainTextState && global$1.webkit && navigator.userAgent.indexOf('Version/') !== -1) {\n            return;\n          }\n          e.stopImmediatePropagation();\n          keyboardPasteEvent.set(e);\n          keyboardPastePressed.set(true);\n          if (global$1.ie && keyboardPastePlainTextState) {\n            e.preventDefault();\n            firePaste(editor, true);\n            return;\n          }\n          pasteBin.remove();\n          pasteBin.create();\n          editor.once('keyup', removePasteBinOnKeyUp);\n          editor.once('paste', function () {\n            editor.off('keyup', removePasteBinOnKeyUp);\n          });\n        }\n      });\n      var insertClipboardContent = function (editor, clipboardContent, isKeyBoardPaste, plainTextMode, internal) {\n        var content;\n        if (hasContentType(clipboardContent, 'text/html')) {\n          content = clipboardContent['text/html'];\n        } else {\n          content = pasteBin.getHtml();\n          internal = internal ? internal : isMarked(content);\n          if (pasteBin.isDefaultContent(content)) {\n            plainTextMode = true;\n          }\n        }\n        content = trimHtml(content);\n        pasteBin.remove();\n        var isPlainTextHtml = internal === false && isPlainText(content);\n        var isAbsoluteUrl$1 = isAbsoluteUrl(content);\n        if (!content.length || isPlainTextHtml && !isAbsoluteUrl$1) {\n          plainTextMode = true;\n        }\n        if (plainTextMode || isAbsoluteUrl$1) {\n          if (hasContentType(clipboardContent, 'text/plain') && isPlainTextHtml) {\n            content = clipboardContent['text/plain'];\n          } else {\n            content = innerText(content);\n          }\n        }\n        if (pasteBin.isDefaultContent(content)) {\n          if (!isKeyBoardPaste) {\n            editor.windowManager.alert('Please use Ctrl+V/Cmd+V keyboard shortcuts to paste contents.');\n          }\n          return;\n        }\n        if (plainTextMode) {\n          pasteText(editor, content);\n        } else {\n          pasteHtml$1(editor, content, internal);\n        }\n      };\n      var getLastRng = function () {\n        return pasteBin.getLastRng() || editor.selection.getRng();\n      };\n      editor.on('paste', function (e) {\n        var isKeyboardPaste = keyboardPasteEvent.isSet() || keyboardPastePressed.isSet();\n        if (isKeyboardPaste) {\n          keyboardPasteEvent.clear();\n        }\n        var clipboardContent = getClipboardContent(editor, e);\n        var plainTextMode = pasteFormat.get() === 'text' || keyboardPastePlainTextState;\n        var internal = hasContentType(clipboardContent, internalHtmlMime());\n        keyboardPastePlainTextState = false;\n        if (e.isDefaultPrevented() || isBrokenAndroidClipboardEvent(e)) {\n          pasteBin.remove();\n          return;\n        }\n        if (!hasHtmlOrText(clipboardContent) && pasteImageData(editor, e, getLastRng())) {\n          pasteBin.remove();\n          return;\n        }\n        if (!isKeyboardPaste) {\n          e.preventDefault();\n        }\n        if (global$1.ie && (!isKeyboardPaste || e.ieFake) && !hasContentType(clipboardContent, 'text/html')) {\n          pasteBin.create();\n          editor.dom.bind(pasteBin.getEl(), 'paste', function (e) {\n            e.stopPropagation();\n          });\n          editor.getDoc().execCommand('Paste', false, null);\n          clipboardContent['text/html'] = pasteBin.getHtml();\n        }\n        if (hasContentType(clipboardContent, 'text/html')) {\n          e.preventDefault();\n          if (!internal) {\n            internal = isMarked(clipboardContent['text/html']);\n          }\n          insertClipboardContent(editor, clipboardContent, isKeyboardPaste, plainTextMode, internal);\n        } else {\n          global$2.setEditorTimeout(editor, function () {\n            insertClipboardContent(editor, clipboardContent, isKeyboardPaste, plainTextMode, internal);\n          }, 0);\n        }\n      });\n    };\n    var registerEventsAndFilters = function (editor, pasteBin, pasteFormat) {\n      registerEventHandlers(editor, pasteBin, pasteFormat);\n      var src;\n      editor.parser.addNodeFilter('img', function (nodes, name, args) {\n        var isPasteInsert = function (args) {\n          return args.data && args.data.paste === true;\n        };\n        var remove = function (node) {\n          if (!node.attr('data-mce-object') && src !== global$1.transparentSrc) {\n            node.remove();\n          }\n        };\n        var isWebKitFakeUrl = function (src) {\n          return src.indexOf('webkit-fake-url') === 0;\n        };\n        var isDataUri = function (src) {\n          return src.indexOf('data:') === 0;\n        };\n        if (!getPasteDataImages(editor) && isPasteInsert(args)) {\n          var i = nodes.length;\n          while (i--) {\n            src = nodes[i].attr('src');\n            if (!src) {\n              continue;\n            }\n            if (isWebKitFakeUrl(src)) {\n              remove(nodes[i]);\n            } else if (!getAllowHtmlDataUrls(editor) && isDataUri(src)) {\n              remove(nodes[i]);\n            }\n          }\n        }\n      });\n    };\n\n    var getPasteBinParent = function (editor) {\n      return global$1.ie && editor.inline ? document.body : editor.getBody();\n    };\n    var isExternalPasteBin = function (editor) {\n      return getPasteBinParent(editor) !== editor.getBody();\n    };\n    var delegatePasteEvents = function (editor, pasteBinElm, pasteBinDefaultContent) {\n      if (isExternalPasteBin(editor)) {\n        editor.dom.bind(pasteBinElm, 'paste keyup', function (_e) {\n          if (!isDefault(editor, pasteBinDefaultContent)) {\n            editor.fire('paste');\n          }\n        });\n      }\n    };\n    var create = function (editor, lastRngCell, pasteBinDefaultContent) {\n      var dom = editor.dom, body = editor.getBody();\n      lastRngCell.set(editor.selection.getRng());\n      var pasteBinElm = editor.dom.add(getPasteBinParent(editor), 'div', {\n        'id': 'mcepastebin',\n        'class': 'mce-pastebin',\n        'contentEditable': true,\n        'data-mce-bogus': 'all',\n        'style': 'position: fixed; top: 50%; width: 10px; height: 10px; overflow: hidden; opacity: 0'\n      }, pasteBinDefaultContent);\n      if (global$1.ie || global$1.gecko) {\n        dom.setStyle(pasteBinElm, 'left', dom.getStyle(body, 'direction', true) === 'rtl' ? 65535 : -65535);\n      }\n      dom.bind(pasteBinElm, 'beforedeactivate focusin focusout', function (e) {\n        e.stopPropagation();\n      });\n      delegatePasteEvents(editor, pasteBinElm, pasteBinDefaultContent);\n      pasteBinElm.focus();\n      editor.selection.select(pasteBinElm, true);\n    };\n    var remove = function (editor, lastRngCell) {\n      if (getEl(editor)) {\n        var pasteBinClone = void 0;\n        var lastRng = lastRngCell.get();\n        while (pasteBinClone = editor.dom.get('mcepastebin')) {\n          editor.dom.remove(pasteBinClone);\n          editor.dom.unbind(pasteBinClone);\n        }\n        if (lastRng) {\n          editor.selection.setRng(lastRng);\n        }\n      }\n      lastRngCell.set(null);\n    };\n    var getEl = function (editor) {\n      return editor.dom.get('mcepastebin');\n    };\n    var getHtml = function (editor) {\n      var copyAndRemove = function (toElm, fromElm) {\n        toElm.appendChild(fromElm);\n        editor.dom.remove(fromElm, true);\n      };\n      var pasteBinClones = global$5.grep(getPasteBinParent(editor).childNodes, function (elm) {\n        return elm.id === 'mcepastebin';\n      });\n      var pasteBinElm = pasteBinClones.shift();\n      global$5.each(pasteBinClones, function (pasteBinClone) {\n        copyAndRemove(pasteBinElm, pasteBinClone);\n      });\n      var dirtyWrappers = editor.dom.select('div[id=mcepastebin]', pasteBinElm);\n      for (var i = dirtyWrappers.length - 1; i >= 0; i--) {\n        var cleanWrapper = editor.dom.create('div');\n        pasteBinElm.insertBefore(cleanWrapper, dirtyWrappers[i]);\n        copyAndRemove(cleanWrapper, dirtyWrappers[i]);\n      }\n      return pasteBinElm ? pasteBinElm.innerHTML : '';\n    };\n    var getLastRng = function (lastRng) {\n      return lastRng.get();\n    };\n    var isDefaultContent = function (pasteBinDefaultContent, content) {\n      return content === pasteBinDefaultContent;\n    };\n    var isPasteBin = function (elm) {\n      return elm && elm.id === 'mcepastebin';\n    };\n    var isDefault = function (editor, pasteBinDefaultContent) {\n      var pasteBinElm = getEl(editor);\n      return isPasteBin(pasteBinElm) && isDefaultContent(pasteBinDefaultContent, pasteBinElm.innerHTML);\n    };\n    var PasteBin = function (editor) {\n      var lastRng = Cell(null);\n      var pasteBinDefaultContent = '%MCEPASTEBIN%';\n      return {\n        create: function () {\n          return create(editor, lastRng, pasteBinDefaultContent);\n        },\n        remove: function () {\n          return remove(editor, lastRng);\n        },\n        getEl: function () {\n          return getEl(editor);\n        },\n        getHtml: function () {\n          return getHtml(editor);\n        },\n        getLastRng: function () {\n          return getLastRng(lastRng);\n        },\n        isDefault: function () {\n          return isDefault(editor, pasteBinDefaultContent);\n        },\n        isDefaultContent: function (content) {\n          return isDefaultContent(pasteBinDefaultContent, content);\n        }\n      };\n    };\n\n    var Clipboard = function (editor, pasteFormat) {\n      var pasteBin = PasteBin(editor);\n      editor.on('PreInit', function () {\n        return registerEventsAndFilters(editor, pasteBin, pasteFormat);\n      });\n      return {\n        pasteFormat: pasteFormat,\n        pasteHtml: function (html, internalFlag) {\n          return pasteHtml$1(editor, html, internalFlag);\n        },\n        pasteText: function (text) {\n          return pasteText(editor, text);\n        },\n        pasteImageData: function (e, rng) {\n          return pasteImageData(editor, e, rng);\n        },\n        getDataTransferItems: getDataTransferItems,\n        hasHtmlOrText: hasHtmlOrText,\n        hasContentType: hasContentType\n      };\n    };\n\n    var togglePlainTextPaste = function (editor, clipboard) {\n      if (clipboard.pasteFormat.get() === 'text') {\n        clipboard.pasteFormat.set('html');\n        firePastePlainTextToggle(editor, false);\n      } else {\n        clipboard.pasteFormat.set('text');\n        firePastePlainTextToggle(editor, true);\n      }\n      editor.focus();\n    };\n\n    var register = function (editor, clipboard) {\n      editor.addCommand('mceTogglePlainTextPaste', function () {\n        togglePlainTextPaste(editor, clipboard);\n      });\n      editor.addCommand('mceInsertClipboardContent', function (ui, value) {\n        if (value.content) {\n          clipboard.pasteHtml(value.content, value.internal);\n        }\n        if (value.text) {\n          clipboard.pasteText(value.text);\n        }\n      });\n    };\n\n    var hasWorkingClipboardApi = function (clipboardData) {\n      return global$1.iOS === false && typeof (clipboardData === null || clipboardData === void 0 ? void 0 : clipboardData.setData) === 'function';\n    };\n    var setHtml5Clipboard = function (clipboardData, html, text) {\n      if (hasWorkingClipboardApi(clipboardData)) {\n        try {\n          clipboardData.clearData();\n          clipboardData.setData('text/html', html);\n          clipboardData.setData('text/plain', text);\n          clipboardData.setData(internalHtmlMime(), html);\n          return true;\n        } catch (e) {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    };\n    var setClipboardData = function (evt, data, fallback, done) {\n      if (setHtml5Clipboard(evt.clipboardData, data.html, data.text)) {\n        evt.preventDefault();\n        done();\n      } else {\n        fallback(data.html, done);\n      }\n    };\n    var fallback = function (editor) {\n      return function (html, done) {\n        var markedHtml = mark(html);\n        var outer = editor.dom.create('div', {\n          'contenteditable': 'false',\n          'data-mce-bogus': 'all'\n        });\n        var inner = editor.dom.create('div', { contenteditable: 'true' }, markedHtml);\n        editor.dom.setStyles(outer, {\n          position: 'fixed',\n          top: '0',\n          left: '-3000px',\n          width: '1000px',\n          overflow: 'hidden'\n        });\n        outer.appendChild(inner);\n        editor.dom.add(editor.getBody(), outer);\n        var range = editor.selection.getRng();\n        inner.focus();\n        var offscreenRange = editor.dom.createRng();\n        offscreenRange.selectNodeContents(inner);\n        editor.selection.setRng(offscreenRange);\n        global$2.setTimeout(function () {\n          editor.selection.setRng(range);\n          outer.parentNode.removeChild(outer);\n          done();\n        }, 0);\n      };\n    };\n    var getData = function (editor) {\n      return {\n        html: editor.selection.getContent({ contextual: true }),\n        text: editor.selection.getContent({ format: 'text' })\n      };\n    };\n    var isTableSelection = function (editor) {\n      return !!editor.dom.getParent(editor.selection.getStart(), 'td[data-mce-selected],th[data-mce-selected]', editor.getBody());\n    };\n    var hasSelectedContent = function (editor) {\n      return !editor.selection.isCollapsed() || isTableSelection(editor);\n    };\n    var cut = function (editor) {\n      return function (evt) {\n        if (hasSelectedContent(editor)) {\n          setClipboardData(evt, getData(editor), fallback(editor), function () {\n            if (global$1.browser.isChrome() || global$1.browser.isFirefox()) {\n              var rng_1 = editor.selection.getRng();\n              global$2.setEditorTimeout(editor, function () {\n                editor.selection.setRng(rng_1);\n                editor.execCommand('Delete');\n              }, 0);\n            } else {\n              editor.execCommand('Delete');\n            }\n          });\n        }\n      };\n    };\n    var copy = function (editor) {\n      return function (evt) {\n        if (hasSelectedContent(editor)) {\n          setClipboardData(evt, getData(editor), fallback(editor), noop);\n        }\n      };\n    };\n    var register$1 = function (editor) {\n      editor.on('cut', cut(editor));\n      editor.on('copy', copy(editor));\n    };\n\n    var global$b = tinymce.util.Tools.resolve('tinymce.dom.RangeUtils');\n\n    var getCaretRangeFromEvent = function (editor, e) {\n      return global$b.getCaretRangeFromPoint(e.clientX, e.clientY, editor.getDoc());\n    };\n    var isPlainTextFileUrl = function (content) {\n      var plainTextContent = content['text/plain'];\n      return plainTextContent ? plainTextContent.indexOf('file://') === 0 : false;\n    };\n    var setFocusedRange = function (editor, rng) {\n      editor.focus();\n      editor.selection.setRng(rng);\n    };\n    var setup = function (editor, clipboard, draggingInternallyState) {\n      if (shouldBlockDrop(editor)) {\n        editor.on('dragend dragover draggesture dragdrop drop drag', function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n        });\n      }\n      if (!shouldPasteDataImages(editor)) {\n        editor.on('drop', function (e) {\n          var dataTransfer = e.dataTransfer;\n          if (dataTransfer && dataTransfer.files && dataTransfer.files.length > 0) {\n            e.preventDefault();\n          }\n        });\n      }\n      editor.on('drop', function (e) {\n        var rng = getCaretRangeFromEvent(editor, e);\n        if (e.isDefaultPrevented() || draggingInternallyState.get()) {\n          return;\n        }\n        var dropContent = clipboard.getDataTransferItems(e.dataTransfer);\n        var internal = clipboard.hasContentType(dropContent, internalHtmlMime());\n        if ((!clipboard.hasHtmlOrText(dropContent) || isPlainTextFileUrl(dropContent)) && clipboard.pasteImageData(e, rng)) {\n          return;\n        }\n        if (rng && shouldFilterDrop(editor)) {\n          var content_1 = dropContent['mce-internal'] || dropContent['text/html'] || dropContent['text/plain'];\n          if (content_1) {\n            e.preventDefault();\n            global$2.setEditorTimeout(editor, function () {\n              editor.undoManager.transact(function () {\n                if (dropContent['mce-internal']) {\n                  editor.execCommand('Delete');\n                }\n                setFocusedRange(editor, rng);\n                content_1 = trimHtml(content_1);\n                if (!dropContent['text/html']) {\n                  clipboard.pasteText(content_1);\n                } else {\n                  clipboard.pasteHtml(content_1, internal);\n                }\n              });\n            });\n          }\n        }\n      });\n      editor.on('dragstart', function (_e) {\n        draggingInternallyState.set(true);\n      });\n      editor.on('dragover dragend', function (e) {\n        if (shouldPasteDataImages(editor) && draggingInternallyState.get() === false) {\n          e.preventDefault();\n          setFocusedRange(editor, getCaretRangeFromEvent(editor, e));\n        }\n        if (e.type === 'dragend') {\n          draggingInternallyState.set(false);\n        }\n      });\n    };\n\n    var setup$1 = function (editor) {\n      var plugin = editor.plugins.paste;\n      var preProcess = getPreProcess(editor);\n      if (preProcess) {\n        editor.on('PastePreProcess', function (e) {\n          preProcess.call(plugin, plugin, e);\n        });\n      }\n      var postProcess = getPostProcess(editor);\n      if (postProcess) {\n        editor.on('PastePostProcess', function (e) {\n          postProcess.call(plugin, plugin, e);\n        });\n      }\n    };\n\n    var addPreProcessFilter = function (editor, filterFunc) {\n      editor.on('PastePreProcess', function (e) {\n        e.content = filterFunc(editor, e.content, e.internal, e.wordContent);\n      });\n    };\n    var addPostProcessFilter = function (editor, filterFunc) {\n      editor.on('PastePostProcess', function (e) {\n        filterFunc(editor, e.node);\n      });\n    };\n    var removeExplorerBrElementsAfterBlocks = function (editor, html) {\n      if (!isWordContent(html)) {\n        return html;\n      }\n      var blockElements = [];\n      global$5.each(editor.schema.getBlockElements(), function (block, blockName) {\n        blockElements.push(blockName);\n      });\n      var explorerBlocksRegExp = new RegExp('(?:<br>&nbsp;[\\\\s\\\\r\\\\n]+|<br>)*(<\\\\/?(' + blockElements.join('|') + ')[^>]*>)(?:<br>&nbsp;[\\\\s\\\\r\\\\n]+|<br>)*', 'g');\n      html = filter$1(html, [[\n          explorerBlocksRegExp,\n          '$1'\n        ]]);\n      html = filter$1(html, [\n        [\n          /<br><br>/g,\n          '<BR><BR>'\n        ],\n        [\n          /<br>/g,\n          ' '\n        ],\n        [\n          /<BR><BR>/g,\n          '<br>'\n        ]\n      ]);\n      return html;\n    };\n    var removeWebKitStyles = function (editor, content, internal, isWordHtml) {\n      if (isWordHtml || internal) {\n        return content;\n      }\n      var webKitStylesSetting = getWebkitStyles(editor);\n      var webKitStyles;\n      if (shouldRemoveWebKitStyles(editor) === false || webKitStylesSetting === 'all') {\n        return content;\n      }\n      if (webKitStylesSetting) {\n        webKitStyles = webKitStylesSetting.split(/[, ]/);\n      }\n      if (webKitStyles) {\n        var dom_1 = editor.dom, node_1 = editor.selection.getNode();\n        content = content.replace(/(<[^>]+) style=\"([^\"]*)\"([^>]*>)/gi, function (all, before, value, after) {\n          var inputStyles = dom_1.parseStyle(dom_1.decode(value));\n          var outputStyles = {};\n          if (webKitStyles === 'none') {\n            return before + after;\n          }\n          for (var i = 0; i < webKitStyles.length; i++) {\n            var inputValue = inputStyles[webKitStyles[i]], currentValue = dom_1.getStyle(node_1, webKitStyles[i], true);\n            if (/color/.test(webKitStyles[i])) {\n              inputValue = dom_1.toHex(inputValue);\n              currentValue = dom_1.toHex(currentValue);\n            }\n            if (currentValue !== inputValue) {\n              outputStyles[webKitStyles[i]] = inputValue;\n            }\n          }\n          outputStyles = dom_1.serializeStyle(outputStyles, 'span');\n          if (outputStyles) {\n            return before + ' style=\"' + outputStyles + '\"' + after;\n          }\n          return before + after;\n        });\n      } else {\n        content = content.replace(/(<[^>]+) style=\"([^\"]*)\"([^>]*>)/gi, '$1$3');\n      }\n      content = content.replace(/(<[^>]+) data-mce-style=\"([^\"]+)\"([^>]*>)/gi, function (all, before, value, after) {\n        return before + ' style=\"' + value + '\"' + after;\n      });\n      return content;\n    };\n    var removeUnderlineAndFontInAnchor = function (editor, root) {\n      editor.$('a', root).find('font,u').each(function (i, node) {\n        editor.dom.remove(node, true);\n      });\n    };\n    var setup$2 = function (editor) {\n      if (global$1.webkit) {\n        addPreProcessFilter(editor, removeWebKitStyles);\n      }\n      if (global$1.ie) {\n        addPreProcessFilter(editor, removeExplorerBrElementsAfterBlocks);\n        addPostProcessFilter(editor, removeUnderlineAndFontInAnchor);\n      }\n    };\n\n    var makeSetupHandler = function (editor, clipboard) {\n      return function (api) {\n        api.setActive(clipboard.pasteFormat.get() === 'text');\n        var pastePlainTextToggleHandler = function (e) {\n          return api.setActive(e.state);\n        };\n        editor.on('PastePlainTextToggle', pastePlainTextToggleHandler);\n        return function () {\n          return editor.off('PastePlainTextToggle', pastePlainTextToggleHandler);\n        };\n      };\n    };\n    var register$2 = function (editor, clipboard) {\n      editor.ui.registry.addToggleButton('pastetext', {\n        active: false,\n        icon: 'paste-text',\n        tooltip: 'Paste as text',\n        onAction: function () {\n          return editor.execCommand('mceTogglePlainTextPaste');\n        },\n        onSetup: makeSetupHandler(editor, clipboard)\n      });\n      editor.ui.registry.addToggleMenuItem('pastetext', {\n        text: 'Paste as text',\n        icon: 'paste-text',\n        onAction: function () {\n          return editor.execCommand('mceTogglePlainTextPaste');\n        },\n        onSetup: makeSetupHandler(editor, clipboard)\n      });\n    };\n\n    function Plugin () {\n      global.add('paste', function (editor) {\n        if (hasProPlugin(editor) === false) {\n          var draggingInternallyState = Cell(false);\n          var pasteFormat = Cell(isPasteAsTextEnabled(editor) ? 'text' : 'html');\n          var clipboard = Clipboard(editor, pasteFormat);\n          var quirks = setup$2(editor);\n          register$2(editor, clipboard);\n          register(editor, clipboard);\n          setup$1(editor);\n          register$1(editor);\n          setup(editor, clipboard, draggingInternallyState);\n          return get(clipboard, quirks);\n        }\n      });\n    }\n\n    Plugin();\n\n}());\n"]}