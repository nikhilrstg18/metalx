{"version":3,"sources":["textpattern/plugin.js"],"names":["global","tinymce","util","Tools","resolve","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","eq","id","isType","type","value","x","Array","isPrototypeOf","constructor","name","String","isString","isObject","isArray","noop","constant","identity","never","always","none","NONE","o","isNone","fold","_s","is","isSome","getOr","getOrThunk","thunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","map","each","bind","exists","forall","filter","equals","equals_","toArray","toString","some","a","constant_a","self","me","f","v","elementEq","b","Optional","from","nativeSlice","slice","nativeIndexOf","indexOf","contains","xs","ts","len","r","pred","push","foldr","acc","eachr","find","until","findUntil","head","get","keys","partition","cases","constructors","adt","acase","count","keys$1","key","args","_i","argLength","match","branches","branchKeys","join","reqKey","foldArgs","target","log","label","console","params","Adt","bothErrors","firstError","secondError","bothValues","results","errors","values","result","err","isValue","isError","_opt","_f","_","onValue","mapError","toOptional","error","message","opt","onError","Result","fromOption","isInlinePattern","pattern","isBlockPattern","sortPatterns","patterns","comparator","start","copy","sort","normalizePattern","formatOrCmd","onFormat","onCommand","format","formats","cmd","end","start_1","end_1","replacement","command","commandValue","denormalizePattern","createPatternSet","inlinePatterns","blockPatterns","get$1","patternsState","setPatterns","newPatterns","normalized","JSON","stringify","set","getPatterns","il","k","j","jl","__spreadArrays","Global","window","Function","error$1","defaultPatterns","getForcedRootBlock","editor","block","getParam","global$1","global$2","global$3","global$4","global$5","point","container","offset","isText","node","nodeType","Node","TEXT_NODE","cleanEmptyNodes","dom","isRoot","isEmpty","parent_1","parentNode","remove","deleteRng","rng","clean","startParent","startContainer","endParent","endContainer","deleteContents","data","isBlockFormatName","formatter","formatSet","obj","isReplacementPattern","getParentBlock","parentBlockOpt","getParent","isBlock","getBody","DOM","alwaysNext","startNode","textBefore","rootNode","textSeeker","backwards","prev","scanLeft","text","textContent","prevText","scanRight","forwards","next","repeatLeft","process","search","nodeName","getContentEditable","isBoundary","generatePath","root","current","childNodes","reverse","generatePathRange","startOffset","endNode","endOffset","resolvePath","path","nodePath","pop","optNode","index","resolvePathRange","range","_a","document","createRange","setStart","setEnd","stripPattern","textAfter","spot","createRng","e","findPatterns","selection","getRng","forcedRootBlock","matchesForcedRootBlock","blockText","nuText","replace","findPattern","trim","getRoot","applyMatches","matches","bookmark","getBookmark","undoManager","transact","execCommand","applyPattern","moveToBookmark","unique","newMarker","create","rangeFromMarker","marker","setStartAfter","setEndBefore","createMarker","markerPrefix","pathRange","textEnd","splitText","textStart","prefix","insertBefore","removeMarker","findPatternStartFromSpot","patternContent","startPattern","element","searchText","substring","startEndIndex","lastIndexOf","charAt","startIndex","nextSpot","findPattern$1","details","position","endPathRng","startRng","endRng","resultsOpt","findPatternsRec","remainingPatterns","results_1","pos","requireGap","startRange","findPatternStart","startPathRng","generatePathRangeFromRange","concat","endSpot","str","suffix","substr","checkRange","patternsWithoutCurrent","splice","applyPattern$1","patternRange","setRng","addMarkers","time","Date","getTime","Math","floor","random","matchesWithEnds","endMarker","idx","startMarker","findPatterns$1","space","collapsed","applyMatches$1","matchesWithMarkers","markerRange","applyReplacementPattern","markerEndRange","markerStartRange","patternMarker","applyPatternWithContent","handleInlineKey","patternSet","inlineMatches","checkKeyEvent","codes","event","predicate","setup","charCodes","keyCodes","on","keyCode","modifierPressed","isCollapsed","blockMatches","add","extra","insertContent","deleteData","handleEnter","preventDefault","code","chr","charCodeAt","charCode","setEditorTimeout","initial","Cell","getPatternSet"],"mappings":"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","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.8.2 (2021-06-23)\n */\n(function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      return {\n        get: get,\n        set: set\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n    function __spreadArrays() {\n      for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n        s += arguments[i].length;\n      for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n      return r;\n    }\n\n    var typeOf = function (x) {\n      var t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      } else if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isString = isType('string');\n    var isObject = isType('object');\n    var isArray = isType('array');\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var identity = function (x) {\n      return x;\n    };\n    var die = function (msg) {\n      return function () {\n        throw new Error(msg);\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, _s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Optional = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var nativeSlice = Array.prototype.slice;\n    var nativeIndexOf = Array.prototype.indexOf;\n    var rawIndexOf = function (ts, t) {\n      return nativeIndexOf.call(ts, t);\n    };\n    var contains = function (xs, x) {\n      return rawIndexOf(xs, x) > -1;\n    };\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var eachr = function (xs, f) {\n      for (var i = xs.length - 1; i >= 0; i--) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var filter = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var foldr = function (xs, f, acc) {\n      eachr(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var findUntil = function (xs, pred, until) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    var find = function (xs, pred) {\n      return findUntil(xs, pred, never);\n    };\n    var forall = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        var x = xs[i];\n        if (pred(x, i) !== true) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var sort = function (xs, comparator) {\n      var copy = nativeSlice.call(xs, 0);\n      copy.sort(comparator);\n      return copy;\n    };\n    var get = function (xs, i) {\n      return i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    };\n    var head = function (xs) {\n      return get(xs, 0);\n    };\n\n    var keys = Object.keys;\n    var hasOwnProperty = Object.hasOwnProperty;\n    var has = function (obj, key) {\n      return hasOwnProperty.call(obj, key);\n    };\n\n    var generate = function (cases) {\n      if (!isArray(cases)) {\n        throw new Error('cases must be an array');\n      }\n      if (cases.length === 0) {\n        throw new Error('there must be at least one case');\n      }\n      var constructors = [];\n      var adt = {};\n      each(cases, function (acase, count) {\n        var keys$1 = keys(acase);\n        if (keys$1.length !== 1) {\n          throw new Error('one and only one name per case');\n        }\n        var key = keys$1[0];\n        var value = acase[key];\n        if (adt[key] !== undefined) {\n          throw new Error('duplicate key detected:' + key);\n        } else if (key === 'cata') {\n          throw new Error('cannot have a case named cata (sorry)');\n        } else if (!isArray(value)) {\n          throw new Error('case arguments must be an array');\n        }\n        constructors.push(key);\n        adt[key] = function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          var argLength = args.length;\n          if (argLength !== value.length) {\n            throw new Error('Wrong number of arguments to case ' + key + '. Expected ' + value.length + ' (' + value + '), got ' + argLength);\n          }\n          var match = function (branches) {\n            var branchKeys = keys(branches);\n            if (constructors.length !== branchKeys.length) {\n              throw new Error('Wrong number of arguments to match. Expected: ' + constructors.join(',') + '\\nActual: ' + branchKeys.join(','));\n            }\n            var allReqd = forall(constructors, function (reqKey) {\n              return contains(branchKeys, reqKey);\n            });\n            if (!allReqd) {\n              throw new Error('Not all branches were specified when using match. Specified: ' + branchKeys.join(', ') + '\\nRequired: ' + constructors.join(', '));\n            }\n            return branches[key].apply(null, args);\n          };\n          return {\n            fold: function () {\n              var foldArgs = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                foldArgs[_i] = arguments[_i];\n              }\n              if (foldArgs.length !== cases.length) {\n                throw new Error('Wrong number of arguments to fold. Expected ' + cases.length + ', got ' + foldArgs.length);\n              }\n              var target = foldArgs[count];\n              return target.apply(null, args);\n            },\n            match: match,\n            log: function (label) {\n              console.log(label, {\n                constructors: constructors,\n                constructor: key,\n                params: args\n              });\n            }\n          };\n        };\n      });\n      return adt;\n    };\n    var Adt = { generate: generate };\n\n    var comparison = Adt.generate([\n      {\n        bothErrors: [\n          'error1',\n          'error2'\n        ]\n      },\n      {\n        firstError: [\n          'error1',\n          'value2'\n        ]\n      },\n      {\n        secondError: [\n          'value1',\n          'error2'\n        ]\n      },\n      {\n        bothValues: [\n          'value1',\n          'value2'\n        ]\n      }\n    ]);\n    var partition = function (results) {\n      var errors = [];\n      var values = [];\n      each(results, function (result) {\n        result.fold(function (err) {\n          errors.push(err);\n        }, function (value) {\n          values.push(value);\n        });\n      });\n      return {\n        errors: errors,\n        values: values\n      };\n    };\n\n    var value = function (o) {\n      var is = function (v) {\n        return o === v;\n      };\n      var or = function (_opt) {\n        return value(o);\n      };\n      var orThunk = function (_f) {\n        return value(o);\n      };\n      var map = function (f) {\n        return value(f(o));\n      };\n      var mapError = function (_f) {\n        return value(o);\n      };\n      var each = function (f) {\n        f(o);\n      };\n      var bind = function (f) {\n        return f(o);\n      };\n      var fold = function (_, onValue) {\n        return onValue(o);\n      };\n      var exists = function (f) {\n        return f(o);\n      };\n      var forall = function (f) {\n        return f(o);\n      };\n      var toOptional = function () {\n        return Optional.some(o);\n      };\n      return {\n        is: is,\n        isValue: always,\n        isError: never,\n        getOr: constant(o),\n        getOrThunk: constant(o),\n        getOrDie: constant(o),\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: each,\n        bind: bind,\n        exists: exists,\n        forall: forall,\n        toOptional: toOptional\n      };\n    };\n    var error = function (message) {\n      var getOrThunk = function (f) {\n        return f();\n      };\n      var getOrDie = function () {\n        return die(String(message))();\n      };\n      var or = function (opt) {\n        return opt;\n      };\n      var orThunk = function (f) {\n        return f();\n      };\n      var map = function (_f) {\n        return error(message);\n      };\n      var mapError = function (f) {\n        return error(f(message));\n      };\n      var bind = function (_f) {\n        return error(message);\n      };\n      var fold = function (onError, _) {\n        return onError(message);\n      };\n      return {\n        is: never,\n        isValue: never,\n        isError: always,\n        getOr: identity,\n        getOrThunk: getOrThunk,\n        getOrDie: getOrDie,\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: noop,\n        bind: bind,\n        exists: never,\n        forall: always,\n        toOptional: Optional.none\n      };\n    };\n    var fromOption = function (opt, err) {\n      return opt.fold(function () {\n        return error(err);\n      }, value);\n    };\n    var Result = {\n      value: value,\n      error: error,\n      fromOption: fromOption\n    };\n\n    var isInlinePattern = function (pattern) {\n      return pattern.type === 'inline-command' || pattern.type === 'inline-format';\n    };\n    var isBlockPattern = function (pattern) {\n      return pattern.type === 'block-command' || pattern.type === 'block-format';\n    };\n    var sortPatterns = function (patterns) {\n      return sort(patterns, function (a, b) {\n        if (a.start.length === b.start.length) {\n          return 0;\n        }\n        return a.start.length > b.start.length ? -1 : 1;\n      });\n    };\n    var normalizePattern = function (pattern) {\n      var err = function (message) {\n        return Result.error({\n          message: message,\n          pattern: pattern\n        });\n      };\n      var formatOrCmd = function (name, onFormat, onCommand) {\n        if (pattern.format !== undefined) {\n          var formats = void 0;\n          if (isArray(pattern.format)) {\n            if (!forall(pattern.format, isString)) {\n              return err(name + ' pattern has non-string items in the `format` array');\n            }\n            formats = pattern.format;\n          } else if (isString(pattern.format)) {\n            formats = [pattern.format];\n          } else {\n            return err(name + ' pattern has non-string `format` parameter');\n          }\n          return Result.value(onFormat(formats));\n        } else if (pattern.cmd !== undefined) {\n          if (!isString(pattern.cmd)) {\n            return err(name + ' pattern has non-string `cmd` parameter');\n          }\n          return Result.value(onCommand(pattern.cmd, pattern.value));\n        } else {\n          return err(name + ' pattern is missing both `format` and `cmd` parameters');\n        }\n      };\n      if (!isObject(pattern)) {\n        return err('Raw pattern is not an object');\n      }\n      if (!isString(pattern.start)) {\n        return err('Raw pattern is missing `start` parameter');\n      }\n      if (pattern.end !== undefined) {\n        if (!isString(pattern.end)) {\n          return err('Inline pattern has non-string `end` parameter');\n        }\n        if (pattern.start.length === 0 && pattern.end.length === 0) {\n          return err('Inline pattern has empty `start` and `end` parameters');\n        }\n        var start_1 = pattern.start;\n        var end_1 = pattern.end;\n        if (end_1.length === 0) {\n          end_1 = start_1;\n          start_1 = '';\n        }\n        return formatOrCmd('Inline', function (format) {\n          return {\n            type: 'inline-format',\n            start: start_1,\n            end: end_1,\n            format: format\n          };\n        }, function (cmd, value) {\n          return {\n            type: 'inline-command',\n            start: start_1,\n            end: end_1,\n            cmd: cmd,\n            value: value\n          };\n        });\n      } else if (pattern.replacement !== undefined) {\n        if (!isString(pattern.replacement)) {\n          return err('Replacement pattern has non-string `replacement` parameter');\n        }\n        if (pattern.start.length === 0) {\n          return err('Replacement pattern has empty `start` parameter');\n        }\n        return Result.value({\n          type: 'inline-command',\n          start: '',\n          end: pattern.start,\n          cmd: 'mceInsertContent',\n          value: pattern.replacement\n        });\n      } else {\n        if (pattern.start.length === 0) {\n          return err('Block pattern has empty `start` parameter');\n        }\n        return formatOrCmd('Block', function (formats) {\n          return {\n            type: 'block-format',\n            start: pattern.start,\n            format: formats[0]\n          };\n        }, function (command, commandValue) {\n          return {\n            type: 'block-command',\n            start: pattern.start,\n            cmd: command,\n            value: commandValue\n          };\n        });\n      }\n    };\n    var denormalizePattern = function (pattern) {\n      if (pattern.type === 'block-command') {\n        return {\n          start: pattern.start,\n          cmd: pattern.cmd,\n          value: pattern.value\n        };\n      } else if (pattern.type === 'block-format') {\n        return {\n          start: pattern.start,\n          format: pattern.format\n        };\n      } else if (pattern.type === 'inline-command') {\n        if (pattern.cmd === 'mceInsertContent' && pattern.start === '') {\n          return {\n            start: pattern.end,\n            replacement: pattern.value\n          };\n        } else {\n          return {\n            start: pattern.start,\n            end: pattern.end,\n            cmd: pattern.cmd,\n            value: pattern.value\n          };\n        }\n      } else if (pattern.type === 'inline-format') {\n        return {\n          start: pattern.start,\n          end: pattern.end,\n          format: pattern.format.length === 1 ? pattern.format[0] : pattern.format\n        };\n      }\n    };\n    var createPatternSet = function (patterns) {\n      return {\n        inlinePatterns: filter(patterns, isInlinePattern),\n        blockPatterns: sortPatterns(filter(patterns, isBlockPattern))\n      };\n    };\n\n    var get$1 = function (patternsState) {\n      var setPatterns = function (newPatterns) {\n        var normalized = partition(map(newPatterns, normalizePattern));\n        if (normalized.errors.length > 0) {\n          var firstError = normalized.errors[0];\n          throw new Error(firstError.message + ':\\n' + JSON.stringify(firstError.pattern, null, 2));\n        }\n        patternsState.set(createPatternSet(normalized.values));\n      };\n      var getPatterns = function () {\n        return __spreadArrays(map(patternsState.get().inlinePatterns, denormalizePattern), map(patternsState.get().blockPatterns, denormalizePattern));\n      };\n      return {\n        setPatterns: setPatterns,\n        getPatterns: getPatterns\n      };\n    };\n\n    var Global = typeof window !== 'undefined' ? window : Function('return this;')();\n\n    var error$1 = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      var console = Global.console;\n      if (console) {\n        if (console.error) {\n          console.error.apply(console, args);\n        } else {\n          console.log.apply(console, args);\n        }\n      }\n    };\n    var defaultPatterns = [\n      {\n        start: '*',\n        end: '*',\n        format: 'italic'\n      },\n      {\n        start: '**',\n        end: '**',\n        format: 'bold'\n      },\n      {\n        start: '#',\n        format: 'h1'\n      },\n      {\n        start: '##',\n        format: 'h2'\n      },\n      {\n        start: '###',\n        format: 'h3'\n      },\n      {\n        start: '####',\n        format: 'h4'\n      },\n      {\n        start: '#####',\n        format: 'h5'\n      },\n      {\n        start: '######',\n        format: 'h6'\n      },\n      {\n        start: '1. ',\n        cmd: 'InsertOrderedList'\n      },\n      {\n        start: '* ',\n        cmd: 'InsertUnorderedList'\n      },\n      {\n        start: '- ',\n        cmd: 'InsertUnorderedList'\n      }\n    ];\n    var getPatternSet = function (editor) {\n      var patterns = editor.getParam('textpattern_patterns', defaultPatterns, 'array');\n      if (!isArray(patterns)) {\n        error$1('The setting textpattern_patterns should be an array');\n        return {\n          inlinePatterns: [],\n          blockPatterns: []\n        };\n      }\n      var normalized = partition(map(patterns, normalizePattern));\n      each(normalized.errors, function (err) {\n        return error$1(err.message, err.pattern);\n      });\n      return createPatternSet(normalized.values);\n    };\n    var getForcedRootBlock = function (editor) {\n      var block = editor.getParam('forced_root_block', 'p');\n      if (block === false) {\n        return '';\n      } else if (block === true) {\n        return 'p';\n      } else {\n        return block;\n      }\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var zeroWidth = '\\uFEFF';\n    var nbsp = '\\xA0';\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.dom.TextSeeker');\n\n    var point = function (container, offset) {\n      return {\n        container: container,\n        offset: offset\n      };\n    };\n\n    var isText = function (node) {\n      return node.nodeType === Node.TEXT_NODE;\n    };\n    var cleanEmptyNodes = function (dom, node, isRoot) {\n      if (node && dom.isEmpty(node) && !isRoot(node)) {\n        var parent_1 = node.parentNode;\n        dom.remove(node);\n        cleanEmptyNodes(dom, parent_1, isRoot);\n      }\n    };\n    var deleteRng = function (dom, rng, isRoot, clean) {\n      if (clean === void 0) {\n        clean = true;\n      }\n      var startParent = rng.startContainer.parentNode;\n      var endParent = rng.endContainer.parentNode;\n      rng.deleteContents();\n      if (clean && !isRoot(rng.startContainer)) {\n        if (isText(rng.startContainer) && rng.startContainer.data.length === 0) {\n          dom.remove(rng.startContainer);\n        }\n        if (isText(rng.endContainer) && rng.endContainer.data.length === 0) {\n          dom.remove(rng.endContainer);\n        }\n        cleanEmptyNodes(dom, startParent, isRoot);\n        if (startParent !== endParent) {\n          cleanEmptyNodes(dom, endParent, isRoot);\n        }\n      }\n    };\n    var isBlockFormatName = function (name, formatter) {\n      var formatSet = formatter.get(name);\n      return isArray(formatSet) && head(formatSet).exists(function (format) {\n        return has(format, 'block');\n      });\n    };\n    var isReplacementPattern = function (pattern) {\n      return pattern.start.length === 0;\n    };\n    var getParentBlock = function (editor, rng) {\n      var parentBlockOpt = Optional.from(editor.dom.getParent(rng.startContainer, editor.dom.isBlock));\n      if (getForcedRootBlock(editor) === '') {\n        return parentBlockOpt.orThunk(function () {\n          return Optional.some(editor.getBody());\n        });\n      } else {\n        return parentBlockOpt;\n      }\n    };\n\n    var DOM = global$4.DOM;\n    var alwaysNext = function (startNode) {\n      return function (node) {\n        return startNode === node ? -1 : 0;\n      };\n    };\n    var isBoundary = function (dom) {\n      return function (node) {\n        return dom.isBlock(node) || contains([\n          'BR',\n          'IMG',\n          'HR',\n          'INPUT'\n        ], node.nodeName) || dom.getContentEditable(node) === 'false';\n      };\n    };\n    var textBefore = function (node, offset, rootNode) {\n      if (isText(node) && offset >= 0) {\n        return Optional.some(point(node, offset));\n      } else {\n        var textSeeker = global$5(DOM);\n        return Optional.from(textSeeker.backwards(node, offset, alwaysNext(node), rootNode)).map(function (prev) {\n          return point(prev.container, prev.container.data.length);\n        });\n      }\n    };\n    var textAfter = function (node, offset, rootNode) {\n      if (isText(node) && offset >= node.length) {\n        return Optional.some(point(node, offset));\n      } else {\n        var textSeeker = global$5(DOM);\n        return Optional.from(textSeeker.forwards(node, offset, alwaysNext(node), rootNode)).map(function (prev) {\n          return point(prev.container, 0);\n        });\n      }\n    };\n    var scanLeft = function (node, offset, rootNode) {\n      if (!isText(node)) {\n        return Optional.none();\n      }\n      var text = node.textContent;\n      if (offset >= 0 && offset <= text.length) {\n        return Optional.some(point(node, offset));\n      } else {\n        var textSeeker = global$5(DOM);\n        return Optional.from(textSeeker.backwards(node, offset, alwaysNext(node), rootNode)).bind(function (prev) {\n          var prevText = prev.container.data;\n          return scanLeft(prev.container, offset + prevText.length, rootNode);\n        });\n      }\n    };\n    var scanRight = function (node, offset, rootNode) {\n      if (!isText(node)) {\n        return Optional.none();\n      }\n      var text = node.textContent;\n      if (offset <= text.length) {\n        return Optional.some(point(node, offset));\n      } else {\n        var textSeeker = global$5(DOM);\n        return Optional.from(textSeeker.forwards(node, offset, alwaysNext(node), rootNode)).bind(function (next) {\n          return scanRight(next.container, offset - text.length, rootNode);\n        });\n      }\n    };\n    var repeatLeft = function (dom, node, offset, process, rootNode) {\n      var search = global$5(dom, isBoundary(dom));\n      return Optional.from(search.backwards(node, offset, process, rootNode));\n    };\n\n    var generatePath = function (root, node, offset) {\n      if (isText(node) && (offset < 0 || offset > node.data.length)) {\n        return [];\n      }\n      var p = [offset];\n      var current = node;\n      while (current !== root && current.parentNode) {\n        var parent_1 = current.parentNode;\n        for (var i = 0; i < parent_1.childNodes.length; i++) {\n          if (parent_1.childNodes[i] === current) {\n            p.push(i);\n            break;\n          }\n        }\n        current = parent_1;\n      }\n      return current === root ? p.reverse() : [];\n    };\n    var generatePathRange = function (root, startNode, startOffset, endNode, endOffset) {\n      var start = generatePath(root, startNode, startOffset);\n      var end = generatePath(root, endNode, endOffset);\n      return {\n        start: start,\n        end: end\n      };\n    };\n    var resolvePath = function (root, path) {\n      var nodePath = path.slice();\n      var offset = nodePath.pop();\n      var resolvedNode = foldl(nodePath, function (optNode, index) {\n        return optNode.bind(function (node) {\n          return Optional.from(node.childNodes[index]);\n        });\n      }, Optional.some(root));\n      return resolvedNode.bind(function (node) {\n        if (isText(node) && (offset < 0 || offset > node.data.length)) {\n          return Optional.none();\n        } else {\n          return Optional.some({\n            node: node,\n            offset: offset\n          });\n        }\n      });\n    };\n    var resolvePathRange = function (root, range) {\n      return resolvePath(root, range.start).bind(function (_a) {\n        var startNode = _a.node, startOffset = _a.offset;\n        return resolvePath(root, range.end).map(function (_a) {\n          var endNode = _a.node, endOffset = _a.offset;\n          var rng = document.createRange();\n          rng.setStart(startNode, startOffset);\n          rng.setEnd(endNode, endOffset);\n          return rng;\n        });\n      });\n    };\n    var generatePathRangeFromRange = function (root, range) {\n      return generatePathRange(root, range.startContainer, range.startOffset, range.endContainer, range.endOffset);\n    };\n\n    var stripPattern = function (dom, block, pattern) {\n      var firstTextNode = textAfter(block, 0, block);\n      firstTextNode.each(function (spot) {\n        var node = spot.container;\n        scanRight(node, pattern.start.length, block).each(function (end) {\n          var rng = dom.createRng();\n          rng.setStart(node, 0);\n          rng.setEnd(end.container, end.offset);\n          deleteRng(dom, rng, function (e) {\n            return e === block;\n          });\n        });\n      });\n    };\n    var applyPattern = function (editor, match) {\n      var dom = editor.dom;\n      var pattern = match.pattern;\n      var rng = resolvePathRange(dom.getRoot(), match.range).getOrDie('Unable to resolve path range');\n      getParentBlock(editor, rng).each(function (block) {\n        if (pattern.type === 'block-format') {\n          if (isBlockFormatName(pattern.format, editor.formatter)) {\n            editor.undoManager.transact(function () {\n              stripPattern(editor.dom, block, pattern);\n              editor.formatter.apply(pattern.format);\n            });\n          }\n        } else if (pattern.type === 'block-command') {\n          editor.undoManager.transact(function () {\n            stripPattern(editor.dom, block, pattern);\n            editor.execCommand(pattern.cmd, false, pattern.value);\n          });\n        }\n      });\n      return true;\n    };\n    var findPattern = function (patterns, text) {\n      var nuText = text.replace(nbsp, ' ');\n      return find(patterns, function (pattern) {\n        return text.indexOf(pattern.start) === 0 || nuText.indexOf(pattern.start) === 0;\n      });\n    };\n    var findPatterns = function (editor, patterns) {\n      var dom = editor.dom;\n      var rng = editor.selection.getRng();\n      return getParentBlock(editor, rng).filter(function (block) {\n        var forcedRootBlock = getForcedRootBlock(editor);\n        var matchesForcedRootBlock = forcedRootBlock === '' && dom.is(block, 'body') || dom.is(block, forcedRootBlock);\n        return block !== null && matchesForcedRootBlock;\n      }).bind(function (block) {\n        var blockText = block.textContent;\n        var matchedPattern = findPattern(patterns, blockText);\n        return matchedPattern.map(function (pattern) {\n          if (global$3.trim(blockText).length === pattern.start.length) {\n            return [];\n          }\n          return [{\n              pattern: pattern,\n              range: generatePathRange(dom.getRoot(), block, 0, block, 0)\n            }];\n        });\n      }).getOr([]);\n    };\n    var applyMatches = function (editor, matches) {\n      if (matches.length === 0) {\n        return;\n      }\n      var bookmark = editor.selection.getBookmark();\n      each(matches, function (match) {\n        return applyPattern(editor, match);\n      });\n      editor.selection.moveToBookmark(bookmark);\n    };\n\n    var unique = 0;\n    var generate$1 = function (prefix) {\n      var date = new Date();\n      var time = date.getTime();\n      var random = Math.floor(Math.random() * 1000000000);\n      unique++;\n      return prefix + '_' + random + unique + String(time);\n    };\n\n    var checkRange = function (str, substr, start) {\n      return substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    };\n    var endsWith = function (str, suffix) {\n      return checkRange(str, suffix, str.length - suffix.length);\n    };\n\n    var newMarker = function (dom, id) {\n      return dom.create('span', {\n        'data-mce-type': 'bookmark',\n        id: id\n      });\n    };\n    var rangeFromMarker = function (dom, marker) {\n      var rng = dom.createRng();\n      rng.setStartAfter(marker.start);\n      rng.setEndBefore(marker.end);\n      return rng;\n    };\n    var createMarker = function (dom, markerPrefix, pathRange) {\n      var rng = resolvePathRange(dom.getRoot(), pathRange).getOrDie('Unable to resolve path range');\n      var startNode = rng.startContainer;\n      var endNode = rng.endContainer;\n      var textEnd = rng.endOffset === 0 ? endNode : endNode.splitText(rng.endOffset);\n      var textStart = rng.startOffset === 0 ? startNode : startNode.splitText(rng.startOffset);\n      return {\n        prefix: markerPrefix,\n        end: textEnd.parentNode.insertBefore(newMarker(dom, markerPrefix + '-end'), textEnd),\n        start: textStart.parentNode.insertBefore(newMarker(dom, markerPrefix + '-start'), textStart)\n      };\n    };\n    var removeMarker = function (dom, marker, isRoot) {\n      cleanEmptyNodes(dom, dom.get(marker.prefix + '-end'), isRoot);\n      cleanEmptyNodes(dom, dom.get(marker.prefix + '-start'), isRoot);\n    };\n\n    var matchesPattern = function (dom, block, patternContent) {\n      return function (element, offset) {\n        var text = element.data;\n        var searchText = text.substring(0, offset);\n        var startEndIndex = searchText.lastIndexOf(patternContent.charAt(patternContent.length - 1));\n        var startIndex = searchText.lastIndexOf(patternContent);\n        if (startIndex !== -1) {\n          return startIndex + patternContent.length;\n        } else if (startEndIndex !== -1) {\n          return startEndIndex + 1;\n        } else {\n          return -1;\n        }\n      };\n    };\n    var findPatternStartFromSpot = function (dom, pattern, block, spot) {\n      var startPattern = pattern.start;\n      var startSpot = repeatLeft(dom, spot.container, spot.offset, matchesPattern(dom, block, startPattern), block);\n      return startSpot.bind(function (spot) {\n        if (spot.offset >= startPattern.length) {\n          var rng = dom.createRng();\n          rng.setStart(spot.container, spot.offset - startPattern.length);\n          rng.setEnd(spot.container, spot.offset);\n          return Optional.some(rng);\n        } else {\n          var offset = spot.offset - startPattern.length;\n          return scanLeft(spot.container, offset, block).map(function (nextSpot) {\n            var rng = dom.createRng();\n            rng.setStart(nextSpot.container, nextSpot.offset);\n            rng.setEnd(spot.container, spot.offset);\n            return rng;\n          }).filter(function (rng) {\n            return rng.toString() === startPattern;\n          }).orThunk(function () {\n            return findPatternStartFromSpot(dom, pattern, block, point(spot.container, 0));\n          });\n        }\n      });\n    };\n    var findPatternStart = function (dom, pattern, node, offset, block, requireGap) {\n      if (requireGap === void 0) {\n        requireGap = false;\n      }\n      if (pattern.start.length === 0 && !requireGap) {\n        var rng = dom.createRng();\n        rng.setStart(node, offset);\n        rng.setEnd(node, offset);\n        return Optional.some(rng);\n      }\n      return textBefore(node, offset, block).bind(function (spot) {\n        var start = findPatternStartFromSpot(dom, pattern, block, spot);\n        return start.bind(function (startRange) {\n          if (requireGap) {\n            if (startRange.endContainer === spot.container && startRange.endOffset === spot.offset) {\n              return Optional.none();\n            } else if (spot.offset === 0 && startRange.endContainer.textContent.length === startRange.endOffset) {\n              return Optional.none();\n            }\n          }\n          return Optional.some(startRange);\n        });\n      });\n    };\n    var findPattern$1 = function (editor, block, details) {\n      var dom = editor.dom;\n      var root = dom.getRoot();\n      var pattern = details.pattern;\n      var endNode = details.position.container;\n      var endOffset = details.position.offset;\n      return scanLeft(endNode, endOffset - details.pattern.end.length, block).bind(function (spot) {\n        var endPathRng = generatePathRange(root, spot.container, spot.offset, endNode, endOffset);\n        if (isReplacementPattern(pattern)) {\n          return Optional.some({\n            matches: [{\n                pattern: pattern,\n                startRng: endPathRng,\n                endRng: endPathRng\n              }],\n            position: spot\n          });\n        } else {\n          var resultsOpt = findPatternsRec(editor, details.remainingPatterns, spot.container, spot.offset, block);\n          var results_1 = resultsOpt.getOr({\n            matches: [],\n            position: spot\n          });\n          var pos = results_1.position;\n          var start = findPatternStart(dom, pattern, pos.container, pos.offset, block, resultsOpt.isNone());\n          return start.map(function (startRng) {\n            var startPathRng = generatePathRangeFromRange(root, startRng);\n            return {\n              matches: results_1.matches.concat([{\n                  pattern: pattern,\n                  startRng: startPathRng,\n                  endRng: endPathRng\n                }]),\n              position: point(startRng.startContainer, startRng.startOffset)\n            };\n          });\n        }\n      });\n    };\n    var findPatternsRec = function (editor, patterns, node, offset, block) {\n      var dom = editor.dom;\n      return textBefore(node, offset, dom.getRoot()).bind(function (endSpot) {\n        var rng = dom.createRng();\n        rng.setStart(block, 0);\n        rng.setEnd(node, offset);\n        var text = rng.toString();\n        for (var i = 0; i < patterns.length; i++) {\n          var pattern = patterns[i];\n          if (!endsWith(text, pattern.end)) {\n            continue;\n          }\n          var patternsWithoutCurrent = patterns.slice();\n          patternsWithoutCurrent.splice(i, 1);\n          var result = findPattern$1(editor, block, {\n            pattern: pattern,\n            remainingPatterns: patternsWithoutCurrent,\n            position: endSpot\n          });\n          if (result.isSome()) {\n            return result;\n          }\n        }\n        return Optional.none();\n      });\n    };\n    var applyPattern$1 = function (editor, pattern, patternRange) {\n      editor.selection.setRng(patternRange);\n      if (pattern.type === 'inline-format') {\n        each(pattern.format, function (format) {\n          editor.formatter.apply(format);\n        });\n      } else {\n        editor.execCommand(pattern.cmd, false, pattern.value);\n      }\n    };\n    var applyReplacementPattern = function (editor, pattern, marker, isRoot) {\n      var markerRange = rangeFromMarker(editor.dom, marker);\n      deleteRng(editor.dom, markerRange, isRoot);\n      applyPattern$1(editor, pattern, markerRange);\n    };\n    var applyPatternWithContent = function (editor, pattern, startMarker, endMarker, isRoot) {\n      var dom = editor.dom;\n      var markerEndRange = rangeFromMarker(dom, endMarker);\n      var markerStartRange = rangeFromMarker(dom, startMarker);\n      deleteRng(dom, markerStartRange, isRoot);\n      deleteRng(dom, markerEndRange, isRoot);\n      var patternMarker = {\n        prefix: startMarker.prefix,\n        start: startMarker.end,\n        end: endMarker.start\n      };\n      var patternRange = rangeFromMarker(dom, patternMarker);\n      applyPattern$1(editor, pattern, patternRange);\n    };\n    var addMarkers = function (dom, matches) {\n      var markerPrefix = generate$1('mce_textpattern');\n      var matchesWithEnds = foldr(matches, function (acc, match) {\n        var endMarker = createMarker(dom, markerPrefix + ('_end' + acc.length), match.endRng);\n        return acc.concat([__assign(__assign({}, match), { endMarker: endMarker })]);\n      }, []);\n      return foldr(matchesWithEnds, function (acc, match) {\n        var idx = matchesWithEnds.length - acc.length - 1;\n        var startMarker = isReplacementPattern(match.pattern) ? match.endMarker : createMarker(dom, markerPrefix + ('_start' + idx), match.startRng);\n        return acc.concat([__assign(__assign({}, match), { startMarker: startMarker })]);\n      }, []);\n    };\n    var findPatterns$1 = function (editor, patterns, space) {\n      var rng = editor.selection.getRng();\n      if (rng.collapsed === false) {\n        return [];\n      }\n      return getParentBlock(editor, rng).bind(function (block) {\n        var offset = rng.startOffset - (space ? 1 : 0);\n        return findPatternsRec(editor, patterns, rng.startContainer, offset, block);\n      }).fold(function () {\n        return [];\n      }, function (result) {\n        return result.matches;\n      });\n    };\n    var applyMatches$1 = function (editor, matches) {\n      if (matches.length === 0) {\n        return;\n      }\n      var dom = editor.dom;\n      var bookmark = editor.selection.getBookmark();\n      var matchesWithMarkers = addMarkers(dom, matches);\n      each(matchesWithMarkers, function (match) {\n        var block = dom.getParent(match.startMarker.start, dom.isBlock);\n        var isRoot = function (node) {\n          return node === block;\n        };\n        if (isReplacementPattern(match.pattern)) {\n          applyReplacementPattern(editor, match.pattern, match.endMarker, isRoot);\n        } else {\n          applyPatternWithContent(editor, match.pattern, match.startMarker, match.endMarker, isRoot);\n        }\n        removeMarker(dom, match.endMarker, isRoot);\n        removeMarker(dom, match.startMarker, isRoot);\n      });\n      editor.selection.moveToBookmark(bookmark);\n    };\n\n    var handleEnter = function (editor, patternSet) {\n      if (!editor.selection.isCollapsed()) {\n        return false;\n      }\n      var inlineMatches = findPatterns$1(editor, patternSet.inlinePatterns, false);\n      var blockMatches = findPatterns(editor, patternSet.blockPatterns);\n      if (blockMatches.length > 0 || inlineMatches.length > 0) {\n        editor.undoManager.add();\n        editor.undoManager.extra(function () {\n          editor.execCommand('mceInsertNewLine');\n        }, function () {\n          editor.insertContent(zeroWidth);\n          applyMatches$1(editor, inlineMatches);\n          applyMatches(editor, blockMatches);\n          var range = editor.selection.getRng();\n          var spot = textBefore(range.startContainer, range.startOffset, editor.dom.getRoot());\n          editor.execCommand('mceInsertNewLine');\n          spot.each(function (s) {\n            var node = s.container;\n            if (node.data.charAt(s.offset - 1) === zeroWidth) {\n              node.deleteData(s.offset - 1, 1);\n              cleanEmptyNodes(editor.dom, node.parentNode, function (e) {\n                return e === editor.dom.getRoot();\n              });\n            }\n          });\n        });\n        return true;\n      }\n      return false;\n    };\n    var handleInlineKey = function (editor, patternSet) {\n      var inlineMatches = findPatterns$1(editor, patternSet.inlinePatterns, true);\n      if (inlineMatches.length > 0) {\n        editor.undoManager.transact(function () {\n          applyMatches$1(editor, inlineMatches);\n        });\n      }\n    };\n    var checkKeyEvent = function (codes, event, predicate) {\n      for (var i = 0; i < codes.length; i++) {\n        if (predicate(codes[i], event)) {\n          return true;\n        }\n      }\n    };\n    var checkKeyCode = function (codes, event) {\n      return checkKeyEvent(codes, event, function (code, event) {\n        return code === event.keyCode && global$2.modifierPressed(event) === false;\n      });\n    };\n    var checkCharCode = function (chars, event) {\n      return checkKeyEvent(chars, event, function (chr, event) {\n        return chr.charCodeAt(0) === event.charCode;\n      });\n    };\n\n    var setup = function (editor, patternsState) {\n      var charCodes = [\n        ',',\n        '.',\n        ';',\n        ':',\n        '!',\n        '?'\n      ];\n      var keyCodes = [32];\n      editor.on('keydown', function (e) {\n        if (e.keyCode === 13 && !global$2.modifierPressed(e)) {\n          if (handleEnter(editor, patternsState.get())) {\n            e.preventDefault();\n          }\n        }\n      }, true);\n      editor.on('keyup', function (e) {\n        if (checkKeyCode(keyCodes, e)) {\n          handleInlineKey(editor, patternsState.get());\n        }\n      });\n      editor.on('keypress', function (e) {\n        if (checkCharCode(charCodes, e)) {\n          global$1.setEditorTimeout(editor, function () {\n            handleInlineKey(editor, patternsState.get());\n          });\n        }\n      });\n    };\n\n    function Plugin () {\n      global.add('textpattern', function (editor) {\n        var patternsState = Cell(getPatternSet(editor));\n        setup(editor, patternsState);\n        return get$1(patternsState);\n      });\n    }\n\n    Plugin();\n\n}());\n"]}