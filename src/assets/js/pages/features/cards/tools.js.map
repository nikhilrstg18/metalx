{"version":3,"sources":["features/cards/tools.js"],"names":["KTCardTools","init","card","toastr","options","showDuration","KTCard","on","setTimeout","info","warning","confirm","KTApp","block","getSelf","overlayColor","type","state","opacity","size","unblock","demo2","message","scrollable","$","getBody","find","data","css","KTUtil","scrollUpdate","demo3","demo4","jQuery","document","ready"],"mappings":"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","file":"tools.js","sourcesContent":["\"use strict\";\r\n\r\nvar KTCardTools = function () {\r\n    // Toastr\r\n    var initToastr = function() {\r\n        toastr.options.showDuration = 1000;\r\n    }\r\n\r\n    // Demo 1\r\n    var demo1 = function() {\r\n        // This card is lazy initialized using data-card=\"true\" attribute. You can access to the card object as shown below and override its behavior\r\n        var card = new KTCard('kt_card_1');\r\n\r\n        // Toggle event handlers\r\n        card.on('beforeCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        card.on('beforeExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Remove event handlers\r\n        card.on('beforeRemove', function(card) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this card ?');  // remove card after user confirmation\r\n        });\r\n\r\n        card.on('afterRemove', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Reload event handlers\r\n        card.on('reload', function(card) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            KTApp.block(card.getSelf(), {\r\n                overlayColor: '#ffffff',\r\n                type: 'loader',\r\n                state: 'primary',\r\n                opacity: 0.3,\r\n                size: 'lg'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                KTApp.unblock(card.getSelf());\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    // Demo 2\r\n    var demo2 = function() {\r\n        // This card is lazy initialized using data-card=\"true\" attribute. You can access to the card object as shown below and override its behavior\r\n        var card = new KTCard('kt_card_2');\r\n\r\n        // Toggle event handlers\r\n        card.on('beforeCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        card.on('beforeExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Remove event handlers\r\n        card.on('beforeRemove', function(card) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this card ?');  // remove card after user confirmation\r\n        });\r\n\r\n        card.on('afterRemove', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Reload event handlers\r\n        card.on('reload', function(card) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            KTApp.block(card.getSelf(), {\r\n                overlayColor: '#000000',\r\n                type: 'spinner',\r\n                state: 'primary',\r\n                opacity: 0.05,\r\n                size: 'lg'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                KTApp.unblock(card.getSelf());\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    // Demo 3\r\n    var demo3 = function() {\r\n        // This card is lazy initialized using data-card=\"true\" attribute. You can access to the card object as shown below and override its behavior\r\n        var card = new KTCard('kt_card_3');\r\n\r\n        // Toggle event handlers\r\n        card.on('beforeCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        card.on('beforeExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Remove event handlers\r\n        card.on('beforeRemove', function(card) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this card ?');  // remove card after user confirmation\r\n        });\r\n\r\n        card.on('afterRemove', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Reload event handlers\r\n        card.on('reload', function(card) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            KTApp.block(card.getSelf(), {\r\n                type: 'loader',\r\n                state: 'success',\r\n                message: 'Please wait...'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                KTApp.unblock(card.getSelf());\r\n            }, 2000);\r\n        });\r\n\r\n        // Reload event handlers\r\n        card.on('afterFullscreenOn', function(card) {\r\n            toastr.warning('After fullscreen on event fired!');\r\n            var scrollable = $(card.getBody()).find('> .kt-scroll');\r\n\r\n            if (scrollable) {\r\n                scrollable.data('original-height', scrollable.css('height'));\r\n                scrollable.css('height', '100%');\r\n\r\n                KTUtil.scrollUpdate(scrollable[0]);\r\n            }\r\n        });\r\n\r\n        card.on('afterFullscreenOff', function(card) {\r\n            toastr.warning('After fullscreen off event fired!');\r\n            var scrollable = $(card.getBody()).find('> .kt-scroll');\r\n\r\n            if (scrollable) {\r\n                var scrollable = $(card.getBody()).find('> .kt-scroll');\r\n                scrollable.css('height', scrollable.data('original-height'));\r\n\r\n                KTUtil.scrollUpdate(scrollable[0]);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Demo 4\r\n    var demo4 = function() {\r\n        // This card is lazy initialized using data-card=\"true\" attribute. You can access to the card object as shown below and override its behavior\r\n        var card = new KTCard('kt_card_4');\r\n\r\n        // Toggle event handlers\r\n        card.on('beforeCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterCollapse', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        card.on('beforeExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        card.on('afterExpand', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Remove event handlers\r\n        card.on('beforeRemove', function(card) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this card ?');  // remove card after user confirmation\r\n        });\r\n\r\n        card.on('afterRemove', function(card) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        // Reload event handlers\r\n        card.on('reload', function(card) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            KTApp.block(card.getSelf(), {\r\n                type: 'loader',\r\n                state: 'primary',\r\n                message: 'Please wait...'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                KTApp.unblock(card.getSelf());\r\n            }, 2000);\r\n        });\r\n\r\n        // Reload event handlers\r\n        card.on('afterFullscreenOn', function(card) {\r\n            toastr.warning('After fullscreen on event fired!');\r\n            var scrollable = $(card.getBody()).find('> .kt-scroll');\r\n\r\n            if (scrollable) {\r\n                scrollable.data('original-height', scrollable.css('height'));\r\n                scrollable.css('height', '100%');\r\n\r\n                KTUtil.scrollUpdate(scrollable[0]);\r\n            }\r\n        });\r\n\r\n        card.on('afterFullscreenOff', function(card) {\r\n            toastr.warning('After fullscreen off event fired!');\r\n            var scrollable = $(card.getBody()).find('> .kt-scroll');\r\n\r\n            if (scrollable) {\r\n                var scrollable = $(card.getBody()).find('> .kt-scroll');\r\n                scrollable.css('height', scrollable.data('original-height'));\r\n\r\n                KTUtil.scrollUpdate(scrollable[0]);\r\n            }\r\n        });\r\n    }\r\n\r\n    return {\r\n        //main function to initiate the module\r\n        init: function () {\r\n            initToastr();\r\n\r\n            // init demos\r\n            demo1();\r\n            demo2();\r\n            demo3();\r\n            demo4();\r\n        }\r\n    };\r\n}();\r\n\r\njQuery(document).ready(function() {\r\n    KTCardTools.init();\r\n});\r\n"]}