{"version":3,"sources":["pagebreak/plugin.js"],"names":["global","tinymce","util","Tools","resolve","global$1","shouldSplitBlock","editor","getParam","pageBreakClass","getPlaceholderHtml","html","transparentSrc","add","addCommand","insertContent","register","ui","registry","addButton","icon","tooltip","onAction","execCommand","addMenuItem","text","register$1","separatorHtml","getSeparatorHtml","shouldSplitBlock$1","pageBreakSeparatorRegExp","RegExp","replace","a","on","e","content","serializer","addNodeFilter","nodes","node","className","i","length","attr","indexOf","parentNode","parent","schema","getBlockElements","name","type","value","raw","remove","setup","target","nodeName","dom","hasClass","setup$1"],"mappings":"CAQC,WACG,aAEA,IAAIA,EAASC,QAAQC,KAAKC,MAAMC,QAAQ,yBAEpCC,EAAWJ,QAAQC,KAAKC,MAAMC,QAAQ,eAKtCE,EAAmB,SAAUC,GAC/B,OAAOA,EAAOC,SAAS,yBAAyB,IAG9CC,EAAiB,gBACjBC,EAAqB,SAAUJ,GACjC,IAAIK,EAAO,aAAeN,EAASO,eAAiB,YAAzC,iEACX,OAAON,EAAmB,MAAQK,EAAO,OAASA,GAqElDX,EAAOa,IAAI,aAAa,SAAUN,IAhCrB,SAAUA,GACvBA,EAAOO,WAAW,gBAAgB,WAChCP,EAAOQ,cAAcL,EAAmBJ,EAAiBC,QA+BzDS,CAAST,GAnBI,SAAUA,GACzBA,EAAOU,GAAGC,SAASC,UAAU,YAAa,CACxCC,KAAM,aACNC,QAAS,aACTC,SAAU,WACR,OAAOf,EAAOgB,YAAY,mBAG9BhB,EAAOU,GAAGC,SAASM,YAAY,YAAa,CAC1CC,KAAM,aACNL,KAAM,aACNE,SAAU,WACR,OAAOf,EAAOgB,YAAY,mBAQ5BG,CAAWnB,GArEH,SAAUA,GACpB,IAAIoB,EAbiB,SAAUpB,GAC/B,OAAOA,EAAOC,SAAS,sBAAuB,4BAY1BoB,CAAiBrB,GACjCsB,EAAqB,WACvB,OAAOvB,EAAiBC,IAEtBuB,EAA2B,IAAIC,OAAOJ,EAAcK,QAAQ,iCAAiC,SAAUC,GACzG,MAAO,KAAOA,KACZ,MACJ1B,EAAO2B,GAAG,oBAAoB,SAAUC,GACtCA,EAAEC,QAAUD,EAAEC,QAAQJ,QAAQF,EAA0BpB,EAAmBmB,SAE7EtB,EAAO2B,GAAG,WAAW,WACnB3B,EAAO8B,WAAWC,cAAc,OAAO,SAAUC,GAE/C,IADA,IAAsBC,EAAMC,EAAxBC,EAAIH,EAAMI,OACPD,KAGL,IADAD,GADAD,EAAOD,EAAMG,IACIE,KAAK,YACkC,IAAvCH,EAAUI,QAAQpC,GAAwB,CACzD,IAAIqC,EAAaN,EAAKO,OACtB,GAAIxC,EAAOyC,OAAOC,mBAAmBH,EAAWI,OAASrB,IAAsB,CAC7EiB,EAAWK,KAAO,EAClBL,EAAWM,MAAQzB,EACnBmB,EAAWO,KAAM,EACjBb,EAAKc,SACL,SAEFd,EAAKW,KAAO,EACZX,EAAKY,MAAQzB,EACba,EAAKa,KAAM,SA0CjBE,CAAMhD,GA7BI,SAAUA,GACtBA,EAAO2B,GAAG,eAAe,SAAUC,GACP,QAAtBA,EAAEqB,OAAOC,UAAsBlD,EAAOmD,IAAIC,SAASxB,EAAEqB,OAAQ/C,KAC/D0B,EAAEe,KAAO,gBA2BXU,CAAQrD,MA1FhB","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.8.2 (2021-06-23)\n */\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var getSeparatorHtml = function (editor) {\n      return editor.getParam('pagebreak_separator', '<!-- pagebreak -->');\n    };\n    var shouldSplitBlock = function (editor) {\n      return editor.getParam('pagebreak_split_block', false);\n    };\n\n    var pageBreakClass = 'mce-pagebreak';\n    var getPlaceholderHtml = function (shouldSplitBlock) {\n      var html = '<img src=\"' + global$1.transparentSrc + '\" class=\"' + pageBreakClass + '\" data-mce-resize=\"false\" data-mce-placeholder />';\n      return shouldSplitBlock ? '<p>' + html + '</p>' : html;\n    };\n    var setup = function (editor) {\n      var separatorHtml = getSeparatorHtml(editor);\n      var shouldSplitBlock$1 = function () {\n        return shouldSplitBlock(editor);\n      };\n      var pageBreakSeparatorRegExp = new RegExp(separatorHtml.replace(/[\\?\\.\\*\\[\\]\\(\\)\\{\\}\\+\\^\\$\\:]/g, function (a) {\n        return '\\\\' + a;\n      }), 'gi');\n      editor.on('BeforeSetContent', function (e) {\n        e.content = e.content.replace(pageBreakSeparatorRegExp, getPlaceholderHtml(shouldSplitBlock$1()));\n      });\n      editor.on('PreInit', function () {\n        editor.serializer.addNodeFilter('img', function (nodes) {\n          var i = nodes.length, node, className;\n          while (i--) {\n            node = nodes[i];\n            className = node.attr('class');\n            if (className && className.indexOf(pageBreakClass) !== -1) {\n              var parentNode = node.parent;\n              if (editor.schema.getBlockElements()[parentNode.name] && shouldSplitBlock$1()) {\n                parentNode.type = 3;\n                parentNode.value = separatorHtml;\n                parentNode.raw = true;\n                node.remove();\n                continue;\n              }\n              node.type = 3;\n              node.value = separatorHtml;\n              node.raw = true;\n            }\n          }\n        });\n      });\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mcePageBreak', function () {\n        editor.insertContent(getPlaceholderHtml(shouldSplitBlock(editor)));\n      });\n    };\n\n    var setup$1 = function (editor) {\n      editor.on('ResolveName', function (e) {\n        if (e.target.nodeName === 'IMG' && editor.dom.hasClass(e.target, pageBreakClass)) {\n          e.name = 'pagebreak';\n        }\n      });\n    };\n\n    var register$1 = function (editor) {\n      editor.ui.registry.addButton('pagebreak', {\n        icon: 'page-break',\n        tooltip: 'Page break',\n        onAction: function () {\n          return editor.execCommand('mcePageBreak');\n        }\n      });\n      editor.ui.registry.addMenuItem('pagebreak', {\n        text: 'Page break',\n        icon: 'page-break',\n        onAction: function () {\n          return editor.execCommand('mcePageBreak');\n        }\n      });\n    };\n\n    function Plugin () {\n      global.add('pagebreak', function (editor) {\n        register(editor);\n        register$1(editor);\n        setup(editor);\n        setup$1(editor);\n      });\n    }\n\n    Plugin();\n\n}());\n"]}